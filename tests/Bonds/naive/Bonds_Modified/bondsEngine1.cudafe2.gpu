# 36 "bondsStructs.cuh"
struct bondsDateStruct;
# 45 "bondsStructs.cuh"
struct bondStruct;
# 54 "bondsStructs.cuh"
struct intRateStruct;
# 63 "bondsStructs.cuh"
struct bondsYieldTermStruct;
# 75 "bondsStructs.cuh"
struct couponStruct;
# 84 "bondsStructs.cuh"
struct cashFlowsStruct;
# 93 "bondsStructs.cuh"
struct resultsStruct;
# 102 "bondsStructs.cuh"
struct inArgsStruct;
# 114 "bondsStructs.cuh"
struct irrFinderStruct;
# 127 "bondsStructs.cuh"
struct solverStruct;
# 1 "bondsEngine1.cudafe1.gpu"
typedef char __nv_bool;
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stddef.h" 3
typedef unsigned long size_t;
#include "crt/device_runtime.h"
# 8 "bondsStructs.cuh"
typedef double dataType;
# 36 "bondsStructs.cuh"
struct bondsDateStruct {
# 37 "bondsStructs.cuh"
int month;
# 38 "bondsStructs.cuh"
int day;
# 39 "bondsStructs.cuh"
int year;
# 40 "bondsStructs.cuh"
int dateSerialNum;};
# 41 "bondsStructs.cuh"
typedef struct bondsDateStruct bondsDateStruct;
# 45 "bondsStructs.cuh"
struct bondStruct {
# 46 "bondsStructs.cuh"
bondsDateStruct startDate;
# 47 "bondsStructs.cuh"
bondsDateStruct maturityDate;
# 48 "bondsStructs.cuh"
float rate;};
# 49 "bondsStructs.cuh"
typedef struct bondStruct bondStruct;
# 54 "bondsStructs.cuh"
struct intRateStruct {
# 55 "bondsStructs.cuh"
dataType rate;
# 56 "bondsStructs.cuh"
dataType freq;
# 57 "bondsStructs.cuh"
int comp;
# 58 "bondsStructs.cuh"
int dayCounter;};
# 59 "bondsStructs.cuh"
typedef struct intRateStruct intRateStruct;
# 63 "bondsStructs.cuh"
struct bondsYieldTermStruct {
# 64 "bondsStructs.cuh"
dataType forward;
# 65 "bondsStructs.cuh"
dataType compounding;
# 66 "bondsStructs.cuh"
dataType frequency;
# 67 "bondsStructs.cuh"
intRateStruct intRate;
# 68 "bondsStructs.cuh"
bondsDateStruct refDate;
# 69 "bondsStructs.cuh"
bondsDateStruct calDate;
# 70 "bondsStructs.cuh"
int dayCounter;
# 70 "bondsStructs.cuh"
char __nv_no_debug_dummy_end_padding_0[4];};
# 71 "bondsStructs.cuh"
typedef struct bondsYieldTermStruct bondsYieldTermStruct;
# 75 "bondsStructs.cuh"
struct couponStruct {
# 76 "bondsStructs.cuh"
bondsDateStruct paymentDate;
# 77 "bondsStructs.cuh"
bondsDateStruct accrualStartDate;
# 78 "bondsStructs.cuh"
bondsDateStruct accrualEndDate;
# 79 "bondsStructs.cuh"
dataType amount;};
# 80 "bondsStructs.cuh"
typedef struct couponStruct couponStruct;
# 84 "bondsStructs.cuh"
struct cashFlowsStruct {
# 85 "bondsStructs.cuh"
couponStruct *legs;
# 86 "bondsStructs.cuh"
intRateStruct intRate;
# 87 "bondsStructs.cuh"
int nominal;
# 88 "bondsStructs.cuh"
int dayCounter;};
# 89 "bondsStructs.cuh"
typedef struct cashFlowsStruct cashFlowsStruct;
# 93 "bondsStructs.cuh"
struct resultsStruct {
# 94 "bondsStructs.cuh"
dataType *dirtyPrice;
# 95 "bondsStructs.cuh"
dataType *accruedAmountCurrDate;
# 96 "bondsStructs.cuh"
dataType *cleanPrice;
# 97 "bondsStructs.cuh"
dataType *bondForwardVal;};
# 98 "bondsStructs.cuh"
typedef struct resultsStruct resultsStruct;
# 102 "bondsStructs.cuh"
struct inArgsStruct {
# 103 "bondsStructs.cuh"
bondsYieldTermStruct *discountCurve;
# 104 "bondsStructs.cuh"
bondsYieldTermStruct *repoCurve;
# 105 "bondsStructs.cuh"
bondsDateStruct *currDate;
# 106 "bondsStructs.cuh"
bondsDateStruct *maturityDate;
# 107 "bondsStructs.cuh"
dataType *bondCleanPrice;
# 108 "bondsStructs.cuh"
bondStruct *bond;
# 109 "bondsStructs.cuh"
dataType *dummyStrike;};
# 110 "bondsStructs.cuh"
typedef struct inArgsStruct inArgsStruct;
# 114 "bondsStructs.cuh"
struct irrFinderStruct {
# 115 "bondsStructs.cuh"
dataType npv;
# 116 "bondsStructs.cuh"
int dayCounter;
# 117 "bondsStructs.cuh"
int comp;
# 118 "bondsStructs.cuh"
dataType freq;
# 119 "bondsStructs.cuh"
__nv_bool includecurrDateFlows;
# 120 "bondsStructs.cuh"
bondsDateStruct currDate;
# 121 "bondsStructs.cuh"
bondsDateStruct npvDate;
# 121 "bondsStructs.cuh"
char __nv_no_debug_dummy_end_padding_0[4];};
# 123 "bondsStructs.cuh"
typedef struct irrFinderStruct irrFinderStruct;
# 127 "bondsStructs.cuh"
struct solverStruct {
# 128 "bondsStructs.cuh"
dataType root_;
# 129 "bondsStructs.cuh"
dataType xMin_;
# 130 "bondsStructs.cuh"
dataType xMax_;
# 131 "bondsStructs.cuh"
dataType fxMin_;
# 132 "bondsStructs.cuh"
dataType fxMax_;
# 133 "bondsStructs.cuh"
int maxEvaluations_;
# 134 "bondsStructs.cuh"
int evaluationNumber_;
# 135 "bondsStructs.cuh"
dataType lowerBound_;
# 136 "bondsStructs.cuh"
dataType upperBound_;
# 137 "bondsStructs.cuh"
__nv_bool lowerBoundEnforced_;
# 138 "bondsStructs.cuh"
__nv_bool upperBoundEnforced_;
# 138 "bondsStructs.cuh"
char __nv_no_debug_dummy_end_padding_0[6];};
# 139 "bondsStructs.cuh"
typedef struct solverStruct solverStruct;
#if !defined(__CUDABE__)
# 206 "/usr/local/cuda/bin/../targets/x86_64-linux/include/math_functions.h"
 __device_builtin__ ___device__(extern  __no_sc__) __attribute__((__nothrow__)) __attribute__((__const__)) double fabs(double);
#endif
#if !defined(__CUDABE__)
# 1448 "/usr/local/cuda/bin/../targets/x86_64-linux/include/math_functions.h"
 __device_builtin__ ___device__(extern  __no_sc__) __attribute__((__nothrow__)) double exp(double);
#endif
#if !defined(__CUDABE__)
# 4716 "/usr/local/cuda/bin/../targets/x86_64-linux/include/math_functions.h"
 __device_builtin__ ___device__(extern  __no_sc__) __attribute__((__nothrow__)) double pow(double, double);
#endif
# 8 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) int _Z20monthLengthKernelGpuib(int, __nv_bool);
# 42 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) int _Z20monthOffsetKernelGpuib(int, __nv_bool);
# 78 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) int _Z19yearOffsetKernelGpui(int);
# 218 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) __nv_bool _Z15isLeapKernelGpui(int);
# 358 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) bondsDateStruct _Z22intializeDateKernelGpuiii(int, int, int);
# 375 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z15yearFractionGpu15bondsDateStructS_i(bondsDateStruct, bondsDateStruct, int);
# 382 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) int _Z11dayCountGpu15bondsDateStructS_i(bondsDateStruct, bondsDateStruct, int);
# 405 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z17couponNotionalGpuv(void);
# 410 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z15bondNotionalGpuv(void);
# 416 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z25fixedRateCouponNominalGpuv(void);
# 421 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) __nv_bool _Z19eventHasOccurredGpu15bondsDateStructS_(bondsDateStruct, bondsDateStruct);
# 427 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) __nv_bool _Z22cashFlowHasOccurredGpu15bondsDateStructS_(bondsDateStruct, bondsDateStruct);
# 434 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) bondsDateStruct _Z14advanceDateGpu15bondsDateStructi(bondsDateStruct, int);
# 461 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) int _Z18getNumCashFlowsGpu12inArgsStructi(inArgsStruct, int);
# 481 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z16getDirtyPriceGpu12inArgsStructi15cashFlowsStructi(inArgsStruct, int, cashFlowsStruct, int);
# 488 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z19getAccruedAmountGpu12inArgsStruct15bondsDateStructi15cashFlowsStructi(inArgsStruct, bondsDateStruct, int, cashFlowsStruct, int);
# 494 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z48discountingBondEngineCalculateSettlementValueGpu12inArgsStructi15cashFlowsStructi(inArgsStruct, int, cashFlowsStruct, int);
# 515 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z20bondAccruedAmountGpu12inArgsStruct15bondsDateStructi15cashFlowsStructi(inArgsStruct, bondsDateStruct, int, cashFlowsStruct, int);
# 525 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z29bondFunctionsAccruedAmountGpu12inArgsStruct15bondsDateStructi15cashFlowsStructi(inArgsStruct, bondsDateStruct, int, cashFlowsStruct, int);
# 538 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z25cashFlowsAccruedAmountGpu15cashFlowsStructb15bondsDateStructi12inArgsStructi(cashFlowsStruct, __nv_bool, bondsDateStruct, int, inArgsStruct, int);
# 559 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z31fixedRateCouponAccruedAmountGpu15cashFlowsStructi15bondsDateStruct12inArgsStructi(cashFlowsStruct, int, bondsDateStruct, inArgsStruct, int);
# 581 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z15cashFlowsNpvGpu15cashFlowsStruct20bondsYieldTermStructb15bondsDateStructS1_i(cashFlowsStruct, bondsYieldTermStruct, __nv_bool, bondsDateStruct, bondsDateStruct, int);
# 609 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z34bondsYieldTermStructureDiscountGpu20bondsYieldTermStruct15bondsDateStruct(bondsYieldTermStruct, bondsDateStruct);
# 618 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z26flatForwardDiscountImplGpu13intRateStructd(intRateStruct, dataType);
# 627 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z29interestRateDiscountFactorGpu13intRateStructd(intRateStruct, dataType);
# 633 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z36interestRateCompoundFactorGpuTwoArgs13intRateStructd(intRateStruct, dataType);
# 649 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z24fixedRateCouponAmountGpu15cashFlowsStructi(cashFlowsStruct, int);
# 662 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z29interestRateCompoundFactorGpu13intRateStruct15bondsDateStructS0_i(intRateStruct, bondsDateStruct, bondsDateStruct, int);
# 671 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z26interestRateImpliedRateGpudidd(dataType, int, dataType, dataType);
# 699 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z20getMarketRepoRateGpu15bondsDateStructidS_12inArgsStructi(bondsDateStruct, int, dataType, bondsDateStruct, inArgsStruct, int);
# 712 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) couponStruct _Z24cashFlowsNextCashFlowGpu15cashFlowsStruct15bondsDateStructi(cashFlowsStruct, bondsDateStruct, int);
# 728 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) int _Z27cashFlowsNextCashFlowNumGpu15cashFlowsStruct15bondsDateStructi(cashFlowsStruct, bondsDateStruct, int);
# 745 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z15getBondYieldGpudiid15bondsDateStructdi12inArgsStructi15cashFlowsStructi(dataType, int, int, dataType, bondsDateStruct, dataType, int, inArgsStruct, int, cashFlowsStruct, int);
# 770 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z24getBondFunctionsYieldGpudiid15bondsDateStructdi12inArgsStructi15cashFlowsStructi(dataType, int, int, dataType, bondsDateStruct, dataType, int, inArgsStruct, int, cashFlowsStruct, int);
# 789 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z20getCashFlowsYieldGpu15cashFlowsStructdiidb15bondsDateStructS0_idid(cashFlowsStruct, dataType, int, int, dataType, __nv_bool, bondsDateStruct, bondsDateStruct, int, dataType, int, dataType);
# 819 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z14solverSolveGpu12solverStruct15irrFinderStructddd15cashFlowsStructi(solverStruct, irrFinderStruct, dataType, dataType, dataType, cashFlowsStruct, int);
# 897 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z20cashFlowsNpvYieldGpu15cashFlowsStruct13intRateStructb15bondsDateStructS1_i(cashFlowsStruct, intRateStruct, __nv_bool, bondsDateStruct, bondsDateStruct, int);
# 942 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z6fOpGpu15irrFinderStructd15cashFlowsStructi(irrFinderStruct, dataType, cashFlowsStruct, int);
# 963 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z14fDerivativeGpu15irrFinderStructd15cashFlowsStructi(irrFinderStruct, dataType, cashFlowsStruct, int);
# 978 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) __nv_bool _Z8closeGpudd(dataType, dataType);
# 984 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) __nv_bool _Z17closeGpuThreeArgsddi(dataType, dataType, int);
# 994 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z16enforceBoundsGpud(dataType);
# 1004 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z12solveImplGpu12solverStruct15irrFinderStructd15cashFlowsStructi(solverStruct, irrFinderStruct, dataType, cashFlowsStruct, int);
# 1071 "bondsKernelsGpu.cu"
___device__(extern  __no_sc__) dataType _Z19modifiedDurationGpu15cashFlowsStruct13intRateStructb15bondsDateStructS1_i(cashFlowsStruct, intRateStruct, __nv_bool, bondsDateStruct, bondsDateStruct, int);
# 1124 "bondsKernelsGpu.cu"
__global__ __var_used__ extern void _Z18getBondsResultsGpu12inArgsStruct13resultsStructi(inArgsStruct, resultsStruct, int);
#include "common_functions.h"
#if !defined(__CUDABE__)
#endif
#if !defined(__CUDABE__)
#endif
#if !defined(__CUDABE__)
#endif
# 8 "bondsKernelsGpu.cu"
___device__( __no_sc__) int _Z20monthLengthKernelGpuib(
# 8 "bondsKernelsGpu.cu"
int month, 
# 8 "bondsKernelsGpu.cu"
__nv_bool leapYear){
# 8 "bondsKernelsGpu.cu"
{
# 9 "bondsKernelsGpu.cu"
{
# 10 "bondsKernelsGpu.cu"
 int __cuda_local_var_42419_6_non_const_MonthLength[12];
# 24 "bondsKernelsGpu.cu"
 int __cuda_local_var_42433_6_non_const_MonthLeapLength[12];
# 11 "bondsKernelsGpu.cu"
((__cuda_local_var_42419_6_non_const_MonthLength)[0]) = 31;
# 12 "bondsKernelsGpu.cu"
((__cuda_local_var_42419_6_non_const_MonthLength)[1]) = 28;
# 13 "bondsKernelsGpu.cu"
((__cuda_local_var_42419_6_non_const_MonthLength)[2]) = 31;
# 14 "bondsKernelsGpu.cu"
((__cuda_local_var_42419_6_non_const_MonthLength)[3]) = 30;
# 15 "bondsKernelsGpu.cu"
((__cuda_local_var_42419_6_non_const_MonthLength)[4]) = 31;
# 16 "bondsKernelsGpu.cu"
((__cuda_local_var_42419_6_non_const_MonthLength)[5]) = 30;
# 17 "bondsKernelsGpu.cu"
((__cuda_local_var_42419_6_non_const_MonthLength)[6]) = 31;
# 18 "bondsKernelsGpu.cu"
((__cuda_local_var_42419_6_non_const_MonthLength)[7]) = 31;
# 19 "bondsKernelsGpu.cu"
((__cuda_local_var_42419_6_non_const_MonthLength)[8]) = 30;
# 20 "bondsKernelsGpu.cu"
((__cuda_local_var_42419_6_non_const_MonthLength)[9]) = 31;
# 21 "bondsKernelsGpu.cu"
((__cuda_local_var_42419_6_non_const_MonthLength)[10]) = 30;
# 22 "bondsKernelsGpu.cu"
((__cuda_local_var_42419_6_non_const_MonthLength)[11]) = 31;
# 25 "bondsKernelsGpu.cu"
((__cuda_local_var_42433_6_non_const_MonthLeapLength)[0]) = 31;
# 26 "bondsKernelsGpu.cu"
((__cuda_local_var_42433_6_non_const_MonthLeapLength)[1]) = 29;
# 27 "bondsKernelsGpu.cu"
((__cuda_local_var_42433_6_non_const_MonthLeapLength)[2]) = 31;
# 28 "bondsKernelsGpu.cu"
((__cuda_local_var_42433_6_non_const_MonthLeapLength)[3]) = 30;
# 29 "bondsKernelsGpu.cu"
((__cuda_local_var_42433_6_non_const_MonthLeapLength)[4]) = 31;
# 30 "bondsKernelsGpu.cu"
((__cuda_local_var_42433_6_non_const_MonthLeapLength)[5]) = 30;
# 31 "bondsKernelsGpu.cu"
((__cuda_local_var_42433_6_non_const_MonthLeapLength)[6]) = 31;
# 32 "bondsKernelsGpu.cu"
((__cuda_local_var_42433_6_non_const_MonthLeapLength)[7]) = 31;
# 33 "bondsKernelsGpu.cu"
((__cuda_local_var_42433_6_non_const_MonthLeapLength)[8]) = 30;
# 34 "bondsKernelsGpu.cu"
((__cuda_local_var_42433_6_non_const_MonthLeapLength)[9]) = 31;
# 35 "bondsKernelsGpu.cu"
((__cuda_local_var_42433_6_non_const_MonthLeapLength)[10]) = 30;
# 36 "bondsKernelsGpu.cu"
((__cuda_local_var_42433_6_non_const_MonthLeapLength)[11]) = 31;
# 38 "bondsKernelsGpu.cu"
return (leapYear) ? ((__cuda_local_var_42433_6_non_const_MonthLeapLength)[(month - 1)]) : ((__cuda_local_var_42419_6_non_const_MonthLength)[(month - 1)]);
# 39 "bondsKernelsGpu.cu"
}
# 39 "bondsKernelsGpu.cu"
}}
# 42 "bondsKernelsGpu.cu"
___device__( __no_sc__) int _Z20monthOffsetKernelGpuib(
# 42 "bondsKernelsGpu.cu"
int m, 
# 42 "bondsKernelsGpu.cu"
__nv_bool leapYear){
# 42 "bondsKernelsGpu.cu"
{
# 43 "bondsKernelsGpu.cu"
{
# 44 "bondsKernelsGpu.cu"
 int __cuda_local_var_42453_6_non_const_MonthOffset[13];
# 59 "bondsKernelsGpu.cu"
 int __cuda_local_var_42468_6_non_const_MonthLeapOffset[13];
# 45 "bondsKernelsGpu.cu"
((__cuda_local_var_42453_6_non_const_MonthOffset)[0]) = 0;
# 46 "bondsKernelsGpu.cu"
((__cuda_local_var_42453_6_non_const_MonthOffset)[1]) = 31;
# 47 "bondsKernelsGpu.cu"
((__cuda_local_var_42453_6_non_const_MonthOffset)[2]) = 59;
# 48 "bondsKernelsGpu.cu"
((__cuda_local_var_42453_6_non_const_MonthOffset)[3]) = 90;
# 49 "bondsKernelsGpu.cu"
((__cuda_local_var_42453_6_non_const_MonthOffset)[4]) = 120;
# 50 "bondsKernelsGpu.cu"
((__cuda_local_var_42453_6_non_const_MonthOffset)[5]) = 151;
# 51 "bondsKernelsGpu.cu"
((__cuda_local_var_42453_6_non_const_MonthOffset)[6]) = 181;
# 52 "bondsKernelsGpu.cu"
((__cuda_local_var_42453_6_non_const_MonthOffset)[7]) = 212;
# 53 "bondsKernelsGpu.cu"
((__cuda_local_var_42453_6_non_const_MonthOffset)[8]) = 243;
# 54 "bondsKernelsGpu.cu"
((__cuda_local_var_42453_6_non_const_MonthOffset)[9]) = 273;
# 55 "bondsKernelsGpu.cu"
((__cuda_local_var_42453_6_non_const_MonthOffset)[10]) = 304;
# 56 "bondsKernelsGpu.cu"
((__cuda_local_var_42453_6_non_const_MonthOffset)[11]) = 334;
# 57 "bondsKernelsGpu.cu"
((__cuda_local_var_42453_6_non_const_MonthOffset)[12]) = 365;
# 60 "bondsKernelsGpu.cu"
((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[0]) = 0;
# 61 "bondsKernelsGpu.cu"
((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[1]) = 31;
# 62 "bondsKernelsGpu.cu"
((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[2]) = 60;
# 63 "bondsKernelsGpu.cu"
((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[3]) = 91;
# 64 "bondsKernelsGpu.cu"
((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[4]) = 121;
# 65 "bondsKernelsGpu.cu"
((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[5]) = 152;
# 66 "bondsKernelsGpu.cu"
((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[6]) = 182;
# 67 "bondsKernelsGpu.cu"
((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[7]) = 213;
# 68 "bondsKernelsGpu.cu"
((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[8]) = 244;
# 69 "bondsKernelsGpu.cu"
((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[9]) = 274;
# 70 "bondsKernelsGpu.cu"
((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[10]) = 305;
# 71 "bondsKernelsGpu.cu"
((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[11]) = 335;
# 72 "bondsKernelsGpu.cu"
((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[12]) = 366;
# 74 "bondsKernelsGpu.cu"
return (leapYear) ? ((__cuda_local_var_42468_6_non_const_MonthLeapOffset)[(m - 1)]) : ((__cuda_local_var_42453_6_non_const_MonthOffset)[(m - 1)]);
# 75 "bondsKernelsGpu.cu"
}
# 75 "bondsKernelsGpu.cu"
}}
# 78 "bondsKernelsGpu.cu"
___device__( __no_sc__) int _Z19yearOffsetKernelGpui(
# 78 "bondsKernelsGpu.cu"
int y){
# 78 "bondsKernelsGpu.cu"
{
# 79 "bondsKernelsGpu.cu"
{
# 81 "bondsKernelsGpu.cu"
 int __cuda_local_var_42490_6_non_const_YearOffset[121];
# 82 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[0]) = 0;
# 82 "bondsKernelsGpu.cu"
;
# 83 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[1]) = 366;
# 83 "bondsKernelsGpu.cu"
;
# 84 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[2]) = 731;
# 85 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[3]) = 1096;
# 86 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[4]) = 1461;
# 87 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[5]) = 1827;
# 88 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[6]) = 2192;
# 89 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[7]) = 2557;
# 90 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[8]) = 2922;
# 91 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[9]) = 3288;
# 92 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[10]) = 3653;
# 93 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[11]) = 4018;
# 94 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[12]) = 4383;
# 95 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[13]) = 4749;
# 96 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[14]) = 5114;
# 97 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[15]) = 5479;
# 98 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[16]) = 5844;
# 99 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[17]) = 6210;
# 100 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[18]) = 6575;
# 101 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[19]) = 6940;
# 102 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[20]) = 7305;
# 103 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[21]) = 7671;
# 106 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[22]) = 8036;
# 107 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[23]) = 8401;
# 108 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[24]) = 8766;
# 109 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[25]) = 9132;
# 110 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[26]) = 9497;
# 111 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[27]) = 9862;
# 112 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[28]) = 10227;
# 113 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[29]) = 10593;
# 114 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[30]) = 10958;
# 115 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[31]) = 11323;
# 116 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[32]) = 11688;
# 117 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[33]) = 12054;
# 119 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[34]) = 12419;
# 120 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[35]) = 12784;
# 121 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[36]) = 13149;
# 122 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[37]) = 13515;
# 123 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[38]) = 13880;
# 124 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[39]) = 14245;
# 125 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[40]) = 14610;
# 126 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[41]) = 14976;
# 127 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[42]) = 15341;
# 128 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[43]) = 15706;
# 129 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[44]) = 16071;
# 130 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[45]) = 16437;
# 132 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[46]) = 16802;
# 133 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[47]) = 17167;
# 134 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[48]) = 17532;
# 135 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[49]) = 17898;
# 136 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[50]) = 18263;
# 137 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[51]) = 18628;
# 138 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[52]) = 18993;
# 139 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[53]) = 19359;
# 140 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[54]) = 19724;
# 141 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[55]) = 20089;
# 142 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[56]) = 20454;
# 143 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[57]) = 20820;
# 145 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[58]) = 21185;
# 146 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[59]) = 21550;
# 147 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[60]) = 21915;
# 148 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[61]) = 22281;
# 149 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[62]) = 22646;
# 150 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[63]) = 23011;
# 151 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[64]) = 23376;
# 152 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[65]) = 23742;
# 153 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[66]) = 24107;
# 154 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[67]) = 24472;
# 155 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[68]) = 24837;
# 156 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[69]) = 25203;
# 158 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[70]) = 25568;
# 159 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[71]) = 25933;
# 160 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[72]) = 26298;
# 161 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[73]) = 26664;
# 162 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[74]) = 27029;
# 163 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[75]) = 27394;
# 164 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[76]) = 27759;
# 165 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[77]) = 28125;
# 166 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[78]) = 28490;
# 167 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[79]) = 28855;
# 168 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[80]) = 29220;
# 169 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[81]) = 29586;
# 171 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[82]) = 29951;
# 172 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[83]) = 30316;
# 173 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[84]) = 30681;
# 174 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[85]) = 31047;
# 175 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[86]) = 31412;
# 176 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[87]) = 31777;
# 177 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[88]) = 32142;
# 178 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[89]) = 32508;
# 179 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[90]) = 32873;
# 180 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[91]) = 33238;
# 181 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[92]) = 33603;
# 182 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[93]) = 33969;
# 184 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[94]) = 34334;
# 185 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[95]) = 34699;
# 186 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[96]) = 35064;
# 187 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[97]) = 35430;
# 188 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[98]) = 35795;
# 189 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[99]) = 36160;
# 190 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[100]) = 36525;
# 191 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[101]) = 36891;
# 192 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[102]) = 37256;
# 193 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[103]) = 37621;
# 194 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[104]) = 37986;
# 195 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[105]) = 38352;
# 197 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[106]) = 38717;
# 198 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[107]) = 39082;
# 199 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[108]) = 39447;
# 200 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[109]) = 39813;
# 201 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[110]) = 40178;
# 202 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[111]) = 40543;
# 203 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[112]) = 40908;
# 204 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[113]) = 41274;
# 205 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[114]) = 41639;
# 206 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[115]) = 42004;
# 207 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[116]) = 42369;
# 208 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[117]) = 42735;
# 209 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[118]) = 43100;
# 210 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[119]) = 42735;
# 211 "bondsKernelsGpu.cu"
((__cuda_local_var_42490_6_non_const_YearOffset)[120]) = 43830;
# 214 "bondsKernelsGpu.cu"
return (__cuda_local_var_42490_6_non_const_YearOffset)[(y - 1900)];
# 215 "bondsKernelsGpu.cu"
}
# 215 "bondsKernelsGpu.cu"
}}
# 218 "bondsKernelsGpu.cu"
___device__( __no_sc__) __nv_bool _Z15isLeapKernelGpui(
# 218 "bondsKernelsGpu.cu"
int y){
# 218 "bondsKernelsGpu.cu"
{
# 219 "bondsKernelsGpu.cu"
{
# 220 "bondsKernelsGpu.cu"
 __nv_bool __cuda_local_var_42629_14_non_const_YearIsLeap[121];
# 222 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[0]) = ((__nv_bool)1);
# 222 "bondsKernelsGpu.cu"
;
# 223 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[1]) = ((__nv_bool)0);
# 223 "bondsKernelsGpu.cu"
;
# 224 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[2]) = ((__nv_bool)0);
# 225 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[3]) = ((__nv_bool)0);
# 226 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[4]) = ((__nv_bool)1);
# 227 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[5]) = ((__nv_bool)0);
# 228 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[6]) = ((__nv_bool)0);
# 229 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[7]) = ((__nv_bool)0);
# 230 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[8]) = ((__nv_bool)1);
# 231 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[9]) = ((__nv_bool)0);
# 232 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[10]) = ((__nv_bool)0);
# 233 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[11]) = ((__nv_bool)0);
# 234 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[12]) = ((__nv_bool)1);
# 235 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[13]) = ((__nv_bool)0);
# 236 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[14]) = ((__nv_bool)0);
# 237 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[15]) = ((__nv_bool)0);
# 238 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[16]) = ((__nv_bool)1);
# 239 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[17]) = ((__nv_bool)0);
# 240 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[18]) = ((__nv_bool)0);
# 241 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[19]) = ((__nv_bool)0);
# 242 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[20]) = ((__nv_bool)1);
# 243 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[21]) = ((__nv_bool)0);
# 246 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[22]) = ((__nv_bool)0);
# 247 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[23]) = ((__nv_bool)0);
# 248 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[24]) = ((__nv_bool)1);
# 249 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[25]) = ((__nv_bool)0);
# 250 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[26]) = ((__nv_bool)0);
# 251 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[27]) = ((__nv_bool)0);
# 252 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[28]) = ((__nv_bool)1);
# 253 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[29]) = ((__nv_bool)0);
# 254 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[30]) = ((__nv_bool)0);
# 255 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[31]) = ((__nv_bool)0);
# 256 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[32]) = ((__nv_bool)1);
# 257 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[33]) = ((__nv_bool)0);
# 259 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[34]) = ((__nv_bool)0);
# 260 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[35]) = ((__nv_bool)0);
# 261 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[36]) = ((__nv_bool)1);
# 262 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[37]) = ((__nv_bool)0);
# 263 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[38]) = ((__nv_bool)0);
# 264 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[39]) = ((__nv_bool)0);
# 265 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[40]) = ((__nv_bool)1);
# 266 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[41]) = ((__nv_bool)0);
# 267 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[42]) = ((__nv_bool)0);
# 268 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[43]) = ((__nv_bool)0);
# 269 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[44]) = ((__nv_bool)1);
# 270 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[45]) = ((__nv_bool)0);
# 272 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[46]) = ((__nv_bool)0);
# 273 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[47]) = ((__nv_bool)0);
# 274 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[48]) = ((__nv_bool)1);
# 275 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[49]) = ((__nv_bool)0);
# 276 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[50]) = ((__nv_bool)0);
# 277 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[51]) = ((__nv_bool)0);
# 278 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[52]) = ((__nv_bool)1);
# 279 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[53]) = ((__nv_bool)0);
# 280 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[54]) = ((__nv_bool)0);
# 281 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[55]) = ((__nv_bool)0);
# 282 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[56]) = ((__nv_bool)1);
# 283 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[57]) = ((__nv_bool)0);
# 285 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[58]) = ((__nv_bool)0);
# 286 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[59]) = ((__nv_bool)0);
# 287 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[60]) = ((__nv_bool)1);
# 288 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[61]) = ((__nv_bool)0);
# 289 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[62]) = ((__nv_bool)0);
# 290 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[63]) = ((__nv_bool)0);
# 291 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[64]) = ((__nv_bool)1);
# 292 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[65]) = ((__nv_bool)0);
# 293 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[66]) = ((__nv_bool)0);
# 294 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[67]) = ((__nv_bool)0);
# 295 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[68]) = ((__nv_bool)1);
# 296 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[69]) = ((__nv_bool)0);
# 298 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[70]) = ((__nv_bool)0);
# 299 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[71]) = ((__nv_bool)0);
# 300 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[72]) = ((__nv_bool)1);
# 301 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[73]) = ((__nv_bool)0);
# 302 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[74]) = ((__nv_bool)0);
# 303 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[75]) = ((__nv_bool)0);
# 304 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[76]) = ((__nv_bool)1);
# 305 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[77]) = ((__nv_bool)0);
# 306 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[78]) = ((__nv_bool)0);
# 307 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[79]) = ((__nv_bool)0);
# 308 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[80]) = ((__nv_bool)1);
# 309 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[81]) = ((__nv_bool)0);
# 311 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[82]) = ((__nv_bool)0);
# 312 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[83]) = ((__nv_bool)0);
# 313 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[84]) = ((__nv_bool)1);
# 314 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[85]) = ((__nv_bool)0);
# 315 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[86]) = ((__nv_bool)0);
# 316 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[87]) = ((__nv_bool)0);
# 317 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[88]) = ((__nv_bool)1);
# 318 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[89]) = ((__nv_bool)0);
# 319 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[90]) = ((__nv_bool)0);
# 320 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[91]) = ((__nv_bool)0);
# 321 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[92]) = ((__nv_bool)1);
# 322 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[93]) = ((__nv_bool)0);
# 324 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[94]) = ((__nv_bool)0);
# 325 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[95]) = ((__nv_bool)0);
# 326 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[96]) = ((__nv_bool)1);
# 327 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[97]) = ((__nv_bool)0);
# 328 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[98]) = ((__nv_bool)0);
# 329 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[99]) = ((__nv_bool)0);
# 330 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[100]) = ((__nv_bool)1);
# 331 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[101]) = ((__nv_bool)0);
# 332 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[102]) = ((__nv_bool)0);
# 333 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[103]) = ((__nv_bool)0);
# 334 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[104]) = ((__nv_bool)1);
# 335 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[105]) = ((__nv_bool)0);
# 337 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[106]) = ((__nv_bool)0);
# 338 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[107]) = ((__nv_bool)0);
# 339 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[108]) = ((__nv_bool)1);
# 340 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[109]) = ((__nv_bool)0);
# 341 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[110]) = ((__nv_bool)0);
# 342 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[111]) = ((__nv_bool)0);
# 343 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[112]) = ((__nv_bool)1);
# 344 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[113]) = ((__nv_bool)0);
# 345 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[114]) = ((__nv_bool)0);
# 346 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[115]) = ((__nv_bool)0);
# 347 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[116]) = ((__nv_bool)1);
# 348 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[117]) = ((__nv_bool)0);
# 349 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[118]) = ((__nv_bool)0);
# 350 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[119]) = ((__nv_bool)0);
# 351 "bondsKernelsGpu.cu"
((__cuda_local_var_42629_14_non_const_YearIsLeap)[120]) = ((__nv_bool)1);
# 354 "bondsKernelsGpu.cu"
return (__cuda_local_var_42629_14_non_const_YearIsLeap)[(y - 1900)];
# 355 "bondsKernelsGpu.cu"
}
# 355 "bondsKernelsGpu.cu"
}}
# 358 "bondsKernelsGpu.cu"
___device__( __no_sc__) bondsDateStruct _Z22intializeDateKernelGpuiii(
# 358 "bondsKernelsGpu.cu"
int d, 
# 358 "bondsKernelsGpu.cu"
int m, 
# 358 "bondsKernelsGpu.cu"
int y){
# 358 "bondsKernelsGpu.cu"
{
# 359 "bondsKernelsGpu.cu"
{
# 360 "bondsKernelsGpu.cu"
 bondsDateStruct __cuda_local_var_42769_18_non_const_currDate;
# 366 "bondsKernelsGpu.cu"
 __nv_bool __cuda_local_var_42775_7_non_const_leap;
# 367 "bondsKernelsGpu.cu"
 int __cuda_local_var_42776_6_non_const_offset;
# 362 "bondsKernelsGpu.cu"
(__cuda_local_var_42769_18_non_const_currDate.day) = d;
# 363 "bondsKernelsGpu.cu"
(__cuda_local_var_42769_18_non_const_currDate.month) = m;
# 364 "bondsKernelsGpu.cu"
(__cuda_local_var_42769_18_non_const_currDate.year) = y;
# 366 "bondsKernelsGpu.cu"
__cuda_local_var_42775_7_non_const_leap = (_Z15isLeapKernelGpui(y));
# 367 "bondsKernelsGpu.cu"
__cuda_local_var_42776_6_non_const_offset = (_Z20monthOffsetKernelGpuib(m, __cuda_local_var_42775_7_non_const_leap));
# 369 "bondsKernelsGpu.cu"
(__cuda_local_var_42769_18_non_const_currDate.dateSerialNum) = ((d + __cuda_local_var_42776_6_non_const_offset) + (_Z19yearOffsetKernelGpui(y)));
# 371 "bondsKernelsGpu.cu"
return __cuda_local_var_42769_18_non_const_currDate;
# 372 "bondsKernelsGpu.cu"
}
# 372 "bondsKernelsGpu.cu"
}}
# 375 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z15yearFractionGpu15bondsDateStructS_i(
# 375 "bondsKernelsGpu.cu"
bondsDateStruct d1, 
# 376 "bondsKernelsGpu.cu"
bondsDateStruct d2, 
# 376 "bondsKernelsGpu.cu"
int dayCounter){
# 376 "bondsKernelsGpu.cu"
{
# 377 "bondsKernelsGpu.cu"
{
# 378 "bondsKernelsGpu.cu"
return (dataType)(fdivide(((double)(_Z11dayCountGpu15bondsDateStructS_i(d1, d2, dayCounter))), (360.0)));
# 379 "bondsKernelsGpu.cu"
}
# 379 "bondsKernelsGpu.cu"
}}
# 382 "bondsKernelsGpu.cu"
___device__( __no_sc__) int _Z11dayCountGpu15bondsDateStructS_i(
# 382 "bondsKernelsGpu.cu"
bondsDateStruct d1, 
# 382 "bondsKernelsGpu.cu"
bondsDateStruct d2, 
# 382 "bondsKernelsGpu.cu"
int dayCounter){
# 382 "bondsKernelsGpu.cu"
{
# 383 "bondsKernelsGpu.cu"
{
# 384 "bondsKernelsGpu.cu"
if (dayCounter == 0)
# 385 "bondsKernelsGpu.cu"
{
# 386 "bondsKernelsGpu.cu"
 int __cuda_local_var_42795_7_non_const_dd1;
# 386 "bondsKernelsGpu.cu"
 int __cuda_local_var_42795_21_non_const_dd2;
# 387 "bondsKernelsGpu.cu"
 int __cuda_local_var_42796_7_non_const_mm1;
# 387 "bondsKernelsGpu.cu"
 int __cuda_local_var_42796_23_non_const_mm2;
# 388 "bondsKernelsGpu.cu"
 int __cuda_local_var_42797_7_non_const_yy1;
# 388 "bondsKernelsGpu.cu"
 int __cuda_local_var_42797_22_non_const_yy2;
# 386 "bondsKernelsGpu.cu"
__cuda_local_var_42795_7_non_const_dd1 = (d1.day);
# 386 "bondsKernelsGpu.cu"
__cuda_local_var_42795_21_non_const_dd2 = (d2.day);
# 387 "bondsKernelsGpu.cu"
__cuda_local_var_42796_7_non_const_mm1 = (d1.month);
# 387 "bondsKernelsGpu.cu"
__cuda_local_var_42796_23_non_const_mm2 = (d2.month);
# 388 "bondsKernelsGpu.cu"
__cuda_local_var_42797_7_non_const_yy1 = (d1.year);
# 388 "bondsKernelsGpu.cu"
__cuda_local_var_42797_22_non_const_yy2 = (d2.year);
# 390 "bondsKernelsGpu.cu"
if ((__cuda_local_var_42795_21_non_const_dd2 == 31) && (__cuda_local_var_42795_7_non_const_dd1 < 30))
# 391 "bondsKernelsGpu.cu"
{
# 392 "bondsKernelsGpu.cu"
__cuda_local_var_42795_21_non_const_dd2 = 1;
# 392 "bondsKernelsGpu.cu"
__cuda_local_var_42796_23_non_const_mm2++;
# 393 "bondsKernelsGpu.cu"
}
# 395 "bondsKernelsGpu.cu"
return (((360 * (__cuda_local_var_42797_22_non_const_yy2 - __cuda_local_var_42797_7_non_const_yy1)) + (30 * ((__cuda_local_var_42796_23_non_const_mm2 - __cuda_local_var_42796_7_non_const_mm1) - 1))) + ((0 > (30 - __cuda_local_var_42795_7_non_const_dd1)) ? 0 : (30 - __cuda_local_var_42795_7_non_const_dd1))) + ((30 < __cuda_local_var_42795_21_non_const_dd2) ? 30 : __cuda_local_var_42795_21_non_const_dd2);
# 396 "bondsKernelsGpu.cu"
}
# 399 "bondsKernelsGpu.cu"
else 
# 399 "bondsKernelsGpu.cu"
{
# 400 "bondsKernelsGpu.cu"
return (d2.dateSerialNum) - (d1.dateSerialNum);
# 401 "bondsKernelsGpu.cu"
}
# 402 "bondsKernelsGpu.cu"
}
# 402 "bondsKernelsGpu.cu"
}}
# 405 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z17couponNotionalGpuv(void){
# 405 "bondsKernelsGpu.cu"
{
# 406 "bondsKernelsGpu.cu"
{
# 407 "bondsKernelsGpu.cu"
return (100.0);
# 408 "bondsKernelsGpu.cu"
}
# 408 "bondsKernelsGpu.cu"
}}
# 410 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z15bondNotionalGpuv(void){
# 410 "bondsKernelsGpu.cu"
{
# 411 "bondsKernelsGpu.cu"
{
# 412 "bondsKernelsGpu.cu"
return (100.0);
# 413 "bondsKernelsGpu.cu"
}
# 413 "bondsKernelsGpu.cu"
}}
# 416 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z25fixedRateCouponNominalGpuv(void){
# 416 "bondsKernelsGpu.cu"
{
# 417 "bondsKernelsGpu.cu"
{
# 418 "bondsKernelsGpu.cu"
return (100.0);
# 419 "bondsKernelsGpu.cu"
}
# 419 "bondsKernelsGpu.cu"
}}
# 421 "bondsKernelsGpu.cu"
___device__( __no_sc__) __nv_bool _Z19eventHasOccurredGpu15bondsDateStructS_(
# 421 "bondsKernelsGpu.cu"
bondsDateStruct currDate, 
# 421 "bondsKernelsGpu.cu"
bondsDateStruct eventDate){
# 421 "bondsKernelsGpu.cu"
{
# 422 "bondsKernelsGpu.cu"
{
# 423 "bondsKernelsGpu.cu"
return (__nv_bool)((eventDate.dateSerialNum) > (currDate.dateSerialNum));
# 424 "bondsKernelsGpu.cu"
}
# 424 "bondsKernelsGpu.cu"
}}
# 427 "bondsKernelsGpu.cu"
___device__( __no_sc__) __nv_bool _Z22cashFlowHasOccurredGpu15bondsDateStructS_(
# 427 "bondsKernelsGpu.cu"
bondsDateStruct refDate, 
# 427 "bondsKernelsGpu.cu"
bondsDateStruct eventDate){
# 427 "bondsKernelsGpu.cu"
{
# 428 "bondsKernelsGpu.cu"
{
# 429 "bondsKernelsGpu.cu"
return _Z19eventHasOccurredGpu15bondsDateStructS_(refDate, eventDate);
# 430 "bondsKernelsGpu.cu"
}
# 430 "bondsKernelsGpu.cu"
}}
# 434 "bondsKernelsGpu.cu"
___device__( __no_sc__) bondsDateStruct _Z14advanceDateGpu15bondsDateStructi(
# 434 "bondsKernelsGpu.cu"
bondsDateStruct date, 
# 434 "bondsKernelsGpu.cu"
int numMonthsAdvance){
# 434 "bondsKernelsGpu.cu"
{
# 435 "bondsKernelsGpu.cu"
{
# 436 "bondsKernelsGpu.cu"
 int __cuda_local_var_42845_6_non_const_d;
# 437 "bondsKernelsGpu.cu"
 int __cuda_local_var_42846_6_non_const_m;
# 438 "bondsKernelsGpu.cu"
 int __cuda_local_var_42847_6_non_const_y;
# 452 "bondsKernelsGpu.cu"
 int __cuda_local_var_42861_6_non_const_length;
# 456 "bondsKernelsGpu.cu"
 bondsDateStruct __cuda_local_var_42865_18_non_const_newDate;
# 436 "bondsKernelsGpu.cu"
__cuda_local_var_42845_6_non_const_d = (date.day);
# 437 "bondsKernelsGpu.cu"
__cuda_local_var_42846_6_non_const_m = ((date.month) + numMonthsAdvance);
# 438 "bondsKernelsGpu.cu"
__cuda_local_var_42847_6_non_const_y = (date.year);
# 440 "bondsKernelsGpu.cu"
while (__cuda_local_var_42846_6_non_const_m > 12)
# 441 "bondsKernelsGpu.cu"
{
# 442 "bondsKernelsGpu.cu"
__cuda_local_var_42846_6_non_const_m -= 12;
# 443 "bondsKernelsGpu.cu"
__cuda_local_var_42847_6_non_const_y += 1;
# 444 "bondsKernelsGpu.cu"
}
# 446 "bondsKernelsGpu.cu"
while (__cuda_local_var_42846_6_non_const_m < 1)
# 447 "bondsKernelsGpu.cu"
{
# 448 "bondsKernelsGpu.cu"
__cuda_local_var_42846_6_non_const_m += 12;
# 449 "bondsKernelsGpu.cu"
__cuda_local_var_42847_6_non_const_y -= 1;
# 450 "bondsKernelsGpu.cu"
}
# 452 "bondsKernelsGpu.cu"
__cuda_local_var_42861_6_non_const_length = (_Z20monthLengthKernelGpuib(__cuda_local_var_42846_6_non_const_m, (_Z15isLeapKernelGpui(__cuda_local_var_42847_6_non_const_y))));
# 453 "bondsKernelsGpu.cu"
if (__cuda_local_var_42845_6_non_const_d > __cuda_local_var_42861_6_non_const_length)
# 453 "bondsKernelsGpu.cu"
{
# 454 "bondsKernelsGpu.cu"
__cuda_local_var_42845_6_non_const_d = __cuda_local_var_42861_6_non_const_length;
# 454 "bondsKernelsGpu.cu"
}
# 456 "bondsKernelsGpu.cu"
__cuda_local_var_42865_18_non_const_newDate = (_Z22intializeDateKernelGpuiii(__cuda_local_var_42845_6_non_const_d, __cuda_local_var_42846_6_non_const_m, __cuda_local_var_42847_6_non_const_y));
# 458 "bondsKernelsGpu.cu"
return __cuda_local_var_42865_18_non_const_newDate;
# 459 "bondsKernelsGpu.cu"
}
# 459 "bondsKernelsGpu.cu"
}}
# 461 "bondsKernelsGpu.cu"
___device__( __no_sc__) int _Z18getNumCashFlowsGpu12inArgsStructi(
# 461 "bondsKernelsGpu.cu"
inArgsStruct inArgs, 
# 461 "bondsKernelsGpu.cu"
int bondNum){
# 461 "bondsKernelsGpu.cu"
{
# 462 "bondsKernelsGpu.cu"
{
# 463 "bondsKernelsGpu.cu"
 int __cuda_local_var_42872_6_non_const_numCashFlows;
# 466 "bondsKernelsGpu.cu"
 bondsDateStruct __cuda_local_var_42875_18_non_const_currCashflowDate;
# 463 "bondsKernelsGpu.cu"
__cuda_local_var_42872_6_non_const_numCashFlows = 0;
# 466 "bondsKernelsGpu.cu"
__cuda_local_var_42875_18_non_const_currCashflowDate = (((inArgs.bond)[bondNum]).maturityDate);
# 468 "bondsKernelsGpu.cu"
while ((__cuda_local_var_42875_18_non_const_currCashflowDate.dateSerialNum) > ((((inArgs.bond)[bondNum]).startDate).dateSerialNum))
# 469 "bondsKernelsGpu.cu"
{
# 470 "bondsKernelsGpu.cu"
__cuda_local_var_42872_6_non_const_numCashFlows++;
# 471 "bondsKernelsGpu.cu"
__cuda_local_var_42875_18_non_const_currCashflowDate = (_Z14advanceDateGpu15bondsDateStructi(__cuda_local_var_42875_18_non_const_currCashflowDate, (-6)));
# 472 "bondsKernelsGpu.cu"
}
# 474 "bondsKernelsGpu.cu"
return __cuda_local_var_42872_6_non_const_numCashFlows + 1;
# 475 "bondsKernelsGpu.cu"
}
# 475 "bondsKernelsGpu.cu"
}}
# 481 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z16getDirtyPriceGpu12inArgsStructi15cashFlowsStructi(
# 481 "bondsKernelsGpu.cu"
inArgsStruct inArgs, 
# 481 "bondsKernelsGpu.cu"
int bondNum, 
# 481 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 481 "bondsKernelsGpu.cu"
int numLegs){
# 481 "bondsKernelsGpu.cu"
{
# 482 "bondsKernelsGpu.cu"
{
# 483 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_42892_11_non_const_currentNotional;
# 483 "bondsKernelsGpu.cu"
__cuda_local_var_42892_11_non_const_currentNotional = (_Z15bondNotionalGpuv());
# 484 "bondsKernelsGpu.cu"
return (dataType)(fdivide(((_Z48discountingBondEngineCalculateSettlementValueGpu12inArgsStructi15cashFlowsStructi(inArgs, bondNum, cashFlows, numLegs)) * (100.0)), __cuda_local_var_42892_11_non_const_currentNotional));
# 485 "bondsKernelsGpu.cu"
}
# 485 "bondsKernelsGpu.cu"
}}
# 488 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z19getAccruedAmountGpu12inArgsStruct15bondsDateStructi15cashFlowsStructi(
# 488 "bondsKernelsGpu.cu"
inArgsStruct inArgs, 
# 488 "bondsKernelsGpu.cu"
bondsDateStruct date, 
# 488 "bondsKernelsGpu.cu"
int bondNum, 
# 488 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 488 "bondsKernelsGpu.cu"
int numLegs){
# 488 "bondsKernelsGpu.cu"
{
# 489 "bondsKernelsGpu.cu"
{
# 490 "bondsKernelsGpu.cu"
return _Z20bondAccruedAmountGpu12inArgsStruct15bondsDateStructi15cashFlowsStructi(inArgs, date, bondNum, cashFlows, numLegs);
# 491 "bondsKernelsGpu.cu"
}
# 491 "bondsKernelsGpu.cu"
}}
# 494 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z48discountingBondEngineCalculateSettlementValueGpu12inArgsStructi15cashFlowsStructi(
# 494 "bondsKernelsGpu.cu"
inArgsStruct inArgs, 
# 494 "bondsKernelsGpu.cu"
int bondNum, 
# 494 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 494 "bondsKernelsGpu.cu"
int numLegs){
# 494 "bondsKernelsGpu.cu"
{
# 495 "bondsKernelsGpu.cu"
{
# 497 "bondsKernelsGpu.cu"
 bondsDateStruct __cuda_local_var_42906_18_non_const_currDate;
# 497 "bondsKernelsGpu.cu"
__cuda_local_var_42906_18_non_const_currDate = ((inArgs.currDate)[bondNum]);
# 499 "bondsKernelsGpu.cu"
if ((__cuda_local_var_42906_18_non_const_currDate.dateSerialNum) < ((((inArgs.bond)[bondNum]).startDate).dateSerialNum))
# 500 "bondsKernelsGpu.cu"
{
# 501 "bondsKernelsGpu.cu"
__cuda_local_var_42906_18_non_const_currDate = (((inArgs.bond)[bondNum]).startDate);
# 502 "bondsKernelsGpu.cu"
}
# 506 "bondsKernelsGpu.cu"
return _Z15cashFlowsNpvGpu15cashFlowsStruct20bondsYieldTermStructb15bondsDateStructS1_i(cashFlows, ((inArgs.discountCurve)[bondNum]), ((__nv_bool)0), __cuda_local_var_42906_18_non_const_currDate, __cuda_local_var_42906_18_non_const_currDate, numLegs);
# 512 "bondsKernelsGpu.cu"
}
# 512 "bondsKernelsGpu.cu"
}}
# 515 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z20bondAccruedAmountGpu12inArgsStruct15bondsDateStructi15cashFlowsStructi(
# 515 "bondsKernelsGpu.cu"
inArgsStruct inArgs, 
# 515 "bondsKernelsGpu.cu"
bondsDateStruct date, 
# 515 "bondsKernelsGpu.cu"
int bondNum, 
# 515 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 515 "bondsKernelsGpu.cu"
int numLegs){
# 515 "bondsKernelsGpu.cu"
{
# 516 "bondsKernelsGpu.cu"
{
# 517 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_42926_11_non_const_currentNotional;
# 517 "bondsKernelsGpu.cu"
__cuda_local_var_42926_11_non_const_currentNotional = (_Z15bondNotionalGpuv());
# 518 "bondsKernelsGpu.cu"
if (__cuda_local_var_42926_11_non_const_currentNotional == (0.0))
# 518 "bondsKernelsGpu.cu"
{
# 519 "bondsKernelsGpu.cu"
return (0.0);
# 519 "bondsKernelsGpu.cu"
}
# 521 "bondsKernelsGpu.cu"
return _Z29bondFunctionsAccruedAmountGpu12inArgsStruct15bondsDateStructi15cashFlowsStructi(inArgs, date, bondNum, cashFlows, numLegs);
# 522 "bondsKernelsGpu.cu"
}
# 522 "bondsKernelsGpu.cu"
}}
# 525 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z29bondFunctionsAccruedAmountGpu12inArgsStruct15bondsDateStructi15cashFlowsStructi(
# 525 "bondsKernelsGpu.cu"
inArgsStruct inArgs, 
# 525 "bondsKernelsGpu.cu"
bondsDateStruct date, 
# 525 "bondsKernelsGpu.cu"
int bondNum, 
# 525 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 525 "bondsKernelsGpu.cu"
int numLegs){
# 525 "bondsKernelsGpu.cu"
{
# 526 "bondsKernelsGpu.cu"
{
# 527 "bondsKernelsGpu.cu"
return (dataType)(fdivide(((_Z25cashFlowsAccruedAmountGpu15cashFlowsStructb15bondsDateStructi12inArgsStructi(cashFlows, ((__nv_bool)0), date, numLegs, inArgs, bondNum)) * (100.0)), (_Z15bondNotionalGpuv())));
# 530 "bondsKernelsGpu.cu"
}
# 530 "bondsKernelsGpu.cu"
}}
# 538 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z25cashFlowsAccruedAmountGpu15cashFlowsStructb15bondsDateStructi12inArgsStructi(
# 538 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 539 "bondsKernelsGpu.cu"
__nv_bool includecurrDateFlows, 
# 540 "bondsKernelsGpu.cu"
bondsDateStruct currDate, 
# 541 "bondsKernelsGpu.cu"
int numLegs, 
# 541 "bondsKernelsGpu.cu"
inArgsStruct inArgs, 
# 541 "bondsKernelsGpu.cu"
int bondNum){
# 541 "bondsKernelsGpu.cu"
{
# 542 "bondsKernelsGpu.cu"
{
# 543 "bondsKernelsGpu.cu"
 int __cuda_local_var_42952_6_non_const_legComputeNum;
# 546 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_42955_18_non_const_result;
# 548 "bondsKernelsGpu.cu"
 int __cuda_local_var_42957_6_non_const_i;
# 543 "bondsKernelsGpu.cu"
__cuda_local_var_42952_6_non_const_legComputeNum = (_Z27cashFlowsNextCashFlowNumGpu15cashFlowsStruct15bondsDateStructi(cashFlows, currDate, numLegs));
# 546 "bondsKernelsGpu.cu"
__cuda_local_var_42955_18_non_const_result = (0.0);
# 550 "bondsKernelsGpu.cu"
for (__cuda_local_var_42957_6_non_const_i = __cuda_local_var_42952_6_non_const_legComputeNum; (__cuda_local_var_42957_6_non_const_i < numLegs); ++__cuda_local_var_42957_6_non_const_i)
# 551 "bondsKernelsGpu.cu"
{
# 552 "bondsKernelsGpu.cu"
__cuda_local_var_42955_18_non_const_result += (_Z31fixedRateCouponAccruedAmountGpu15cashFlowsStructi15bondsDateStruct12inArgsStructi(cashFlows, __cuda_local_var_42957_6_non_const_i, currDate, inArgs, bondNum));
# 553 "bondsKernelsGpu.cu"
}
# 555 "bondsKernelsGpu.cu"
return __cuda_local_var_42955_18_non_const_result;
# 556 "bondsKernelsGpu.cu"
}
# 556 "bondsKernelsGpu.cu"
}}
# 559 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z31fixedRateCouponAccruedAmountGpu15cashFlowsStructi15bondsDateStruct12inArgsStructi(
# 559 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 559 "bondsKernelsGpu.cu"
int numLeg, 
# 559 "bondsKernelsGpu.cu"
bondsDateStruct d, 
# 559 "bondsKernelsGpu.cu"
inArgsStruct inArgs, 
# 559 "bondsKernelsGpu.cu"
int bondNum){
# 559 "bondsKernelsGpu.cu"
{
# 560 "bondsKernelsGpu.cu"
{
# 561 "bondsKernelsGpu.cu"
if (((d.dateSerialNum) <= ((((cashFlows.legs)[numLeg]).accrualStartDate).dateSerialNum)) || ((d.dateSerialNum) > (((inArgs.maturityDate)[bondNum]).dateSerialNum)))
# 562 "bondsKernelsGpu.cu"
{
# 563 "bondsKernelsGpu.cu"
return (0.0);
# 564 "bondsKernelsGpu.cu"
}
# 566 "bondsKernelsGpu.cu"
else 
# 566 "bondsKernelsGpu.cu"
{
# 567 "bondsKernelsGpu.cu"
 bondsDateStruct __cuda_local_var_42976_19_non_const_endDate;
# 567 "bondsKernelsGpu.cu"
__cuda_local_var_42976_19_non_const_endDate = (((cashFlows.legs)[numLeg]).accrualEndDate);
# 568 "bondsKernelsGpu.cu"
if ((d.dateSerialNum) < ((((cashFlows.legs)[numLeg]).accrualEndDate).dateSerialNum))
# 569 "bondsKernelsGpu.cu"
{
# 570 "bondsKernelsGpu.cu"
__cuda_local_var_42976_19_non_const_endDate = d;
# 571 "bondsKernelsGpu.cu"
}
# 573 "bondsKernelsGpu.cu"
return (_Z25fixedRateCouponNominalGpuv()) * ((_Z29interestRateCompoundFactorGpu13intRateStruct15bondsDateStructS0_i((cashFlows.intRate), (((cashFlows.legs)[numLeg]).accrualStartDate), __cuda_local_var_42976_19_non_const_endDate, (cashFlows.dayCounter))) - (1.0));
# 574 "bondsKernelsGpu.cu"
}
# 575 "bondsKernelsGpu.cu"
}
# 575 "bondsKernelsGpu.cu"
}}
# 581 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z15cashFlowsNpvGpu15cashFlowsStruct20bondsYieldTermStructb15bondsDateStructS1_i(
# 581 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 582 "bondsKernelsGpu.cu"
bondsYieldTermStruct discountCurve, 
# 583 "bondsKernelsGpu.cu"
__nv_bool includecurrDateFlows, 
# 584 "bondsKernelsGpu.cu"
bondsDateStruct currDate, 
# 585 "bondsKernelsGpu.cu"
bondsDateStruct npvDate, 
# 586 "bondsKernelsGpu.cu"
int numLegs){
# 586 "bondsKernelsGpu.cu"
{
# 587 "bondsKernelsGpu.cu"
{
# 590 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_42999_18_non_const_totalNPV;
# 592 "bondsKernelsGpu.cu"
 int __cuda_local_var_43001_6_non_const_i;
# 588 "bondsKernelsGpu.cu"
npvDate = currDate;
# 590 "bondsKernelsGpu.cu"
__cuda_local_var_42999_18_non_const_totalNPV = (0.0);
# 594 "bondsKernelsGpu.cu"
for (__cuda_local_var_43001_6_non_const_i = 0; (__cuda_local_var_43001_6_non_const_i < numLegs); ++__cuda_local_var_43001_6_non_const_i)
# 594 "bondsKernelsGpu.cu"
{
# 598 "bondsKernelsGpu.cu"
if (!(_Z22cashFlowHasOccurredGpu15bondsDateStructS_((((cashFlows.legs)[__cuda_local_var_43001_6_non_const_i]).paymentDate), currDate)))
# 598 "bondsKernelsGpu.cu"
{
# 599 "bondsKernelsGpu.cu"
__cuda_local_var_42999_18_non_const_totalNPV += ((_Z24fixedRateCouponAmountGpu15cashFlowsStructi(cashFlows, __cuda_local_var_43001_6_non_const_i)) * (_Z34bondsYieldTermStructureDiscountGpu20bondsYieldTermStruct15bondsDateStruct(discountCurve, (((cashFlows.legs)[__cuda_local_var_43001_6_non_const_i]).paymentDate))));
# 599 "bondsKernelsGpu.cu"
}
# 601 "bondsKernelsGpu.cu"
}
# 603 "bondsKernelsGpu.cu"
return (dataType)(fdivide(__cuda_local_var_42999_18_non_const_totalNPV, (_Z34bondsYieldTermStructureDiscountGpu20bondsYieldTermStruct15bondsDateStruct(discountCurve, npvDate))));
# 604 "bondsKernelsGpu.cu"
}
# 604 "bondsKernelsGpu.cu"
}}
# 609 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z34bondsYieldTermStructureDiscountGpu20bondsYieldTermStruct15bondsDateStruct(
# 609 "bondsKernelsGpu.cu"
bondsYieldTermStruct ytStruct, 
# 609 "bondsKernelsGpu.cu"
bondsDateStruct t){
# 609 "bondsKernelsGpu.cu"
{
# 610 "bondsKernelsGpu.cu"
{
# 611 "bondsKernelsGpu.cu"
((ytStruct.intRate).rate) = (ytStruct.forward);
# 612 "bondsKernelsGpu.cu"
((ytStruct.intRate).freq) = (ytStruct.frequency);
# 613 "bondsKernelsGpu.cu"
((ytStruct.intRate).comp) = ((int)(__double2int_rz(((double)(ytStruct.compounding)))));
# 614 "bondsKernelsGpu.cu"
return _Z26flatForwardDiscountImplGpu13intRateStructd((ytStruct.intRate), (_Z15yearFractionGpu15bondsDateStructS_i((ytStruct.refDate), t, (ytStruct.dayCounter))));
# 615 "bondsKernelsGpu.cu"
}
# 615 "bondsKernelsGpu.cu"
}}
# 618 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z26flatForwardDiscountImplGpu13intRateStructd(
# 618 "bondsKernelsGpu.cu"
intRateStruct intRate, 
# 618 "bondsKernelsGpu.cu"
dataType t){
# 618 "bondsKernelsGpu.cu"
{
# 619 "bondsKernelsGpu.cu"
{
# 620 "bondsKernelsGpu.cu"
return _Z29interestRateDiscountFactorGpu13intRateStructd(intRate, t);
# 621 "bondsKernelsGpu.cu"
}
# 621 "bondsKernelsGpu.cu"
}}
# 627 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z29interestRateDiscountFactorGpu13intRateStructd(
# 627 "bondsKernelsGpu.cu"
intRateStruct intRate, 
# 627 "bondsKernelsGpu.cu"
dataType t){
# 627 "bondsKernelsGpu.cu"
{
# 628 "bondsKernelsGpu.cu"
{
# 629 "bondsKernelsGpu.cu"
return (1.0) / (_Z36interestRateCompoundFactorGpuTwoArgs13intRateStructd(intRate, t));
# 630 "bondsKernelsGpu.cu"
}
# 630 "bondsKernelsGpu.cu"
}}
# 633 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z36interestRateCompoundFactorGpuTwoArgs13intRateStructd(
# 633 "bondsKernelsGpu.cu"
intRateStruct intRate, 
# 633 "bondsKernelsGpu.cu"
dataType t){
# 633 "bondsKernelsGpu.cu"
{
# 634 "bondsKernelsGpu.cu"
{
# 636 "bondsKernelsGpu.cu"
{
# 637 "bondsKernelsGpu.cu"
if ((intRate.comp) == 0)
# 637 "bondsKernelsGpu.cu"
{
# 638 "bondsKernelsGpu.cu"
return (1.0) + ((intRate.rate) * t);
# 638 "bondsKernelsGpu.cu"
}
# 638 "bondsKernelsGpu.cu"
else 
# 638 "bondsKernelsGpu.cu"
{
# 639 "bondsKernelsGpu.cu"
if ((intRate.comp) == 1)
# 639 "bondsKernelsGpu.cu"
{
# 640 "bondsKernelsGpu.cu"
return pow(((1.0) + ((double)(fdivide((intRate.rate), (intRate.freq))))), ((intRate.freq) * t));
# 640 "bondsKernelsGpu.cu"
}
# 640 "bondsKernelsGpu.cu"
else 
# 640 "bondsKernelsGpu.cu"
{
# 641 "bondsKernelsGpu.cu"
if ((intRate.comp) == 2)
# 641 "bondsKernelsGpu.cu"
{
# 642 "bondsKernelsGpu.cu"
return exp(((intRate.rate) * t));
# 642 "bondsKernelsGpu.cu"
}
# 642 "bondsKernelsGpu.cu"
}
# 642 "bondsKernelsGpu.cu"
}
# 643 "bondsKernelsGpu.cu"
}
# 645 "bondsKernelsGpu.cu"
return (0.0);
# 646 "bondsKernelsGpu.cu"
}
# 646 "bondsKernelsGpu.cu"
}}
# 649 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z24fixedRateCouponAmountGpu15cashFlowsStructi(
# 649 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 649 "bondsKernelsGpu.cu"
int numLeg){
# 649 "bondsKernelsGpu.cu"
{
# 650 "bondsKernelsGpu.cu"
{
# 651 "bondsKernelsGpu.cu"
if ((((cashFlows.legs)[numLeg]).amount) == (-1.0))
# 652 "bondsKernelsGpu.cu"
{
# 653 "bondsKernelsGpu.cu"
return (_Z25fixedRateCouponNominalGpuv()) * ((_Z29interestRateCompoundFactorGpu13intRateStruct15bondsDateStructS0_i((cashFlows.intRate), (((cashFlows.legs)[numLeg]).accrualStartDate), (((cashFlows.legs)[numLeg]).accrualEndDate), (cashFlows.dayCounter))) - (1.0));
# 655 "bondsKernelsGpu.cu"
}
# 657 "bondsKernelsGpu.cu"
else 
# 657 "bondsKernelsGpu.cu"
{
# 658 "bondsKernelsGpu.cu"
return ((cashFlows.legs)[numLeg]).amount;
# 659 "bondsKernelsGpu.cu"
}
# 660 "bondsKernelsGpu.cu"
}
# 660 "bondsKernelsGpu.cu"
}}
# 662 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z29interestRateCompoundFactorGpu13intRateStruct15bondsDateStructS0_i(
# 662 "bondsKernelsGpu.cu"
intRateStruct intRate, 
# 662 "bondsKernelsGpu.cu"
bondsDateStruct d1, 
# 663 "bondsKernelsGpu.cu"
bondsDateStruct d2, 
# 663 "bondsKernelsGpu.cu"
int dayCounter){
# 663 "bondsKernelsGpu.cu"
{
# 664 "bondsKernelsGpu.cu"
{
# 665 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43074_11_non_const_t;
# 665 "bondsKernelsGpu.cu"
__cuda_local_var_43074_11_non_const_t = (_Z15yearFractionGpu15bondsDateStructS_i(d1, d2, dayCounter));
# 666 "bondsKernelsGpu.cu"
return _Z36interestRateCompoundFactorGpuTwoArgs13intRateStructd(intRate, __cuda_local_var_43074_11_non_const_t);
# 667 "bondsKernelsGpu.cu"
}
# 667 "bondsKernelsGpu.cu"
}}
# 671 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z26interestRateImpliedRateGpudidd(
# 671 "bondsKernelsGpu.cu"
dataType compound, 
# 672 "bondsKernelsGpu.cu"
int comp, 
# 673 "bondsKernelsGpu.cu"
dataType freq, 
# 674 "bondsKernelsGpu.cu"
dataType t){
# 674 "bondsKernelsGpu.cu"
{
# 675 "bondsKernelsGpu.cu"
{
# 676 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43085_18_non_const_r;
# 676 "bondsKernelsGpu.cu"
__cuda_local_var_43085_18_non_const_r = (0.0);
# 677 "bondsKernelsGpu.cu"
if (compound == (1.0))
# 678 "bondsKernelsGpu.cu"
{
# 679 "bondsKernelsGpu.cu"
__cuda_local_var_43085_18_non_const_r = (0.0);
# 680 "bondsKernelsGpu.cu"
}
# 682 "bondsKernelsGpu.cu"
else 
# 682 "bondsKernelsGpu.cu"
{
# 684 "bondsKernelsGpu.cu"
switch (comp)
# 685 "bondsKernelsGpu.cu"
{
# 686 "bondsKernelsGpu.cu"
case 0:
# 687 "bondsKernelsGpu.cu"
__cuda_local_var_43085_18_non_const_r = ((dataType)(fdivide((compound - (1.0)), t)));
# 688 "bondsKernelsGpu.cu"
goto __T20;
# 689 "bondsKernelsGpu.cu"
case 1:
# 690 "bondsKernelsGpu.cu"
__cuda_local_var_43085_18_non_const_r = (((pow(((dataType)compound), ((1.0) / (freq * t)))) - (1.0)) * freq);
# 691 "bondsKernelsGpu.cu"
goto __T20;
# 692 "bondsKernelsGpu.cu"
}
# 692 "bondsKernelsGpu.cu"
__T20:;
# 692 "bondsKernelsGpu.cu"
;
# 693 "bondsKernelsGpu.cu"
}
# 695 "bondsKernelsGpu.cu"
return __cuda_local_var_43085_18_non_const_r;
# 696 "bondsKernelsGpu.cu"
}
# 696 "bondsKernelsGpu.cu"
}}
# 699 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z20getMarketRepoRateGpu15bondsDateStructidS_12inArgsStructi(
# 699 "bondsKernelsGpu.cu"
bondsDateStruct d, 
# 700 "bondsKernelsGpu.cu"
int comp, 
# 701 "bondsKernelsGpu.cu"
dataType freq, 
# 702 "bondsKernelsGpu.cu"
bondsDateStruct referenceDate, 
# 703 "bondsKernelsGpu.cu"
inArgsStruct inArgs, 
# 703 "bondsKernelsGpu.cu"
int bondNum){
# 703 "bondsKernelsGpu.cu"
{
# 704 "bondsKernelsGpu.cu"
{
# 705 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43114_11_non_const_compound;
# 705 "bondsKernelsGpu.cu"
__cuda_local_var_43114_11_non_const_compound = ((1.0) / (_Z34bondsYieldTermStructureDiscountGpu20bondsYieldTermStruct15bondsDateStruct(((inArgs.repoCurve)[bondNum]), d)));
# 706 "bondsKernelsGpu.cu"
return _Z26interestRateImpliedRateGpudidd(__cuda_local_var_43114_11_non_const_compound, comp, freq, (_Z15yearFractionGpu15bondsDateStructS_i(referenceDate, d, (((inArgs.repoCurve)[bondNum]).dayCounter))));
# 709 "bondsKernelsGpu.cu"
}
# 709 "bondsKernelsGpu.cu"
}}
# 712 "bondsKernelsGpu.cu"
___device__( __no_sc__) couponStruct _Z24cashFlowsNextCashFlowGpu15cashFlowsStruct15bondsDateStructi(
# 712 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 713 "bondsKernelsGpu.cu"
bondsDateStruct currDate, 
# 714 "bondsKernelsGpu.cu"
int numLegs){
# 714 "bondsKernelsGpu.cu"
{
# 715 "bondsKernelsGpu.cu"
{
# 716 "bondsKernelsGpu.cu"
 int __cuda_local_var_43125_6_non_const_i;
# 717 "bondsKernelsGpu.cu"
for (__cuda_local_var_43125_6_non_const_i = 0; (__cuda_local_var_43125_6_non_const_i < numLegs); ++__cuda_local_var_43125_6_non_const_i)
# 718 "bondsKernelsGpu.cu"
{
# 721 "bondsKernelsGpu.cu"
if (!(_Z22cashFlowHasOccurredGpu15bondsDateStructS_((((cashFlows.legs)[__cuda_local_var_43125_6_non_const_i]).paymentDate), currDate)))
# 721 "bondsKernelsGpu.cu"
{
# 722 "bondsKernelsGpu.cu"
return (cashFlows.legs)[__cuda_local_var_43125_6_non_const_i];
# 722 "bondsKernelsGpu.cu"
}
# 723 "bondsKernelsGpu.cu"
}
# 724 "bondsKernelsGpu.cu"
return (cashFlows.legs)[(numLegs - 1)];
# 725 "bondsKernelsGpu.cu"
}
# 725 "bondsKernelsGpu.cu"
}}
# 728 "bondsKernelsGpu.cu"
___device__( __no_sc__) int _Z27cashFlowsNextCashFlowNumGpu15cashFlowsStruct15bondsDateStructi(
# 728 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 729 "bondsKernelsGpu.cu"
bondsDateStruct currDate, 
# 730 "bondsKernelsGpu.cu"
int numLegs){
# 730 "bondsKernelsGpu.cu"
{
# 731 "bondsKernelsGpu.cu"
{
# 732 "bondsKernelsGpu.cu"
 int __cuda_local_var_43141_6_non_const_i;
# 734 "bondsKernelsGpu.cu"
for (__cuda_local_var_43141_6_non_const_i = 0; (__cuda_local_var_43141_6_non_const_i < numLegs); ++__cuda_local_var_43141_6_non_const_i)
# 735 "bondsKernelsGpu.cu"
{
# 737 "bondsKernelsGpu.cu"
if (!(_Z22cashFlowHasOccurredGpu15bondsDateStructS_((((cashFlows.legs)[__cuda_local_var_43141_6_non_const_i]).paymentDate), currDate)))
# 737 "bondsKernelsGpu.cu"
{
# 738 "bondsKernelsGpu.cu"
return __cuda_local_var_43141_6_non_const_i;
# 738 "bondsKernelsGpu.cu"
}
# 739 "bondsKernelsGpu.cu"
}
# 741 "bondsKernelsGpu.cu"
return numLegs - 1;
# 742 "bondsKernelsGpu.cu"
}
# 742 "bondsKernelsGpu.cu"
}}
# 745 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z15getBondYieldGpudiid15bondsDateStructdi12inArgsStructi15cashFlowsStructi(
# 745 "bondsKernelsGpu.cu"
dataType cleanPrice, 
# 746 "bondsKernelsGpu.cu"
int dc, 
# 747 "bondsKernelsGpu.cu"
int comp, 
# 748 "bondsKernelsGpu.cu"
dataType freq, 
# 749 "bondsKernelsGpu.cu"
bondsDateStruct settlement, 
# 750 "bondsKernelsGpu.cu"
dataType accuracy, 
# 751 "bondsKernelsGpu.cu"
int maxEvaluations, 
# 752 "bondsKernelsGpu.cu"
inArgsStruct currInArgs, 
# 752 "bondsKernelsGpu.cu"
int bondNum, 
# 752 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 752 "bondsKernelsGpu.cu"
int numLegs){
# 752 "bondsKernelsGpu.cu"
{
# 753 "bondsKernelsGpu.cu"
{
# 754 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43163_11_non_const_currentNotional;
# 754 "bondsKernelsGpu.cu"
__cuda_local_var_43163_11_non_const_currentNotional = (_Z15bondNotionalGpuv());
# 756 "bondsKernelsGpu.cu"
if (__cuda_local_var_43163_11_non_const_currentNotional == (0.0))
# 756 "bondsKernelsGpu.cu"
{
# 757 "bondsKernelsGpu.cu"
return (0.0);
# 757 "bondsKernelsGpu.cu"
}
# 759 "bondsKernelsGpu.cu"
if (((((currInArgs.bond)[bondNum]).startDate).dateSerialNum) > (settlement.dateSerialNum))
# 760 "bondsKernelsGpu.cu"
{
# 761 "bondsKernelsGpu.cu"
settlement = (((currInArgs.bond)[bondNum]).startDate);
# 762 "bondsKernelsGpu.cu"
}
# 764 "bondsKernelsGpu.cu"
return _Z24getBondFunctionsYieldGpudiid15bondsDateStructdi12inArgsStructi15cashFlowsStructi(cleanPrice, dc, comp, freq, settlement, accuracy, maxEvaluations, currInArgs, bondNum, cashFlows, numLegs);
# 767 "bondsKernelsGpu.cu"
}
# 767 "bondsKernelsGpu.cu"
}}
# 770 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z24getBondFunctionsYieldGpudiid15bondsDateStructdi12inArgsStructi15cashFlowsStructi(
# 770 "bondsKernelsGpu.cu"
dataType cleanPrice, 
# 771 "bondsKernelsGpu.cu"
int dc, 
# 772 "bondsKernelsGpu.cu"
int comp, 
# 773 "bondsKernelsGpu.cu"
dataType freq, 
# 774 "bondsKernelsGpu.cu"
bondsDateStruct settlement, 
# 775 "bondsKernelsGpu.cu"
dataType accuracy, 
# 776 "bondsKernelsGpu.cu"
int maxEvaluations, 
# 777 "bondsKernelsGpu.cu"
inArgsStruct currInArgs, 
# 777 "bondsKernelsGpu.cu"
int bondNum, 
# 777 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 777 "bondsKernelsGpu.cu"
int numLegs){
# 777 "bondsKernelsGpu.cu"
{
# 778 "bondsKernelsGpu.cu"
{
# 779 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43188_18_non_const_dirtyPrice;
# 779 "bondsKernelsGpu.cu"
__cuda_local_var_43188_18_non_const_dirtyPrice = (cleanPrice + (_Z29bondFunctionsAccruedAmountGpu12inArgsStruct15bondsDateStructi15cashFlowsStructi(currInArgs, settlement, bondNum, cashFlows, numLegs)));
# 780 "bondsKernelsGpu.cu"
__cuda_local_var_43188_18_non_const_dirtyPrice = ((dataType)(fdivide(__cuda_local_var_43188_18_non_const_dirtyPrice, (fdivide((100.0), (_Z15bondNotionalGpuv()))))));
# 782 "bondsKernelsGpu.cu"
return _Z20getCashFlowsYieldGpu15cashFlowsStructdiidb15bondsDateStructS0_idid(cashFlows, __cuda_local_var_43188_18_non_const_dirtyPrice, dc, comp, freq, ((__nv_bool)0), settlement, settlement, numLegs, accuracy, maxEvaluations, (0.05000000074505805969));
# 786 "bondsKernelsGpu.cu"
}
# 786 "bondsKernelsGpu.cu"
}}
# 789 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z20getCashFlowsYieldGpu15cashFlowsStructdiidb15bondsDateStructS0_idid(
# 789 "bondsKernelsGpu.cu"
cashFlowsStruct leg, 
# 790 "bondsKernelsGpu.cu"
dataType npv, 
# 791 "bondsKernelsGpu.cu"
int dayCounter, 
# 792 "bondsKernelsGpu.cu"
int compounding, 
# 793 "bondsKernelsGpu.cu"
dataType frequency, 
# 794 "bondsKernelsGpu.cu"
__nv_bool includecurrDateFlows, 
# 795 "bondsKernelsGpu.cu"
bondsDateStruct currDate, 
# 796 "bondsKernelsGpu.cu"
bondsDateStruct npvDate, 
# 797 "bondsKernelsGpu.cu"
int numLegs, 
# 798 "bondsKernelsGpu.cu"
dataType accuracy, 
# 799 "bondsKernelsGpu.cu"
int maxIterations, 
# 800 "bondsKernelsGpu.cu"
dataType guess){
# 800 "bondsKernelsGpu.cu"
{
# 801 "bondsKernelsGpu.cu"
{
# 803 "bondsKernelsGpu.cu"
 solverStruct __cuda_local_var_43212_15_non_const_solver;
# 805 "bondsKernelsGpu.cu"
 irrFinderStruct __cuda_local_var_43214_18_non_const_objFunction;
# 804 "bondsKernelsGpu.cu"
(__cuda_local_var_43212_15_non_const_solver.maxEvaluations_) = maxIterations;
# 807 "bondsKernelsGpu.cu"
(__cuda_local_var_43214_18_non_const_objFunction.npv) = npv;
# 808 "bondsKernelsGpu.cu"
(__cuda_local_var_43214_18_non_const_objFunction.dayCounter) = dayCounter;
# 809 "bondsKernelsGpu.cu"
(__cuda_local_var_43214_18_non_const_objFunction.comp) = compounding;
# 810 "bondsKernelsGpu.cu"
(__cuda_local_var_43214_18_non_const_objFunction.freq) = frequency;
# 811 "bondsKernelsGpu.cu"
(__cuda_local_var_43214_18_non_const_objFunction.includecurrDateFlows) = includecurrDateFlows;
# 812 "bondsKernelsGpu.cu"
(__cuda_local_var_43214_18_non_const_objFunction.currDate) = currDate;
# 813 "bondsKernelsGpu.cu"
(__cuda_local_var_43214_18_non_const_objFunction.npvDate) = npvDate;
# 815 "bondsKernelsGpu.cu"
return _Z14solverSolveGpu12solverStruct15irrFinderStructddd15cashFlowsStructi(__cuda_local_var_43212_15_non_const_solver, __cuda_local_var_43214_18_non_const_objFunction, accuracy, guess, ((dataType)(fdivide(guess, (10.0)))), leg, numLegs);
# 816 "bondsKernelsGpu.cu"
}
# 816 "bondsKernelsGpu.cu"
}}
# 819 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z14solverSolveGpu12solverStruct15irrFinderStructddd15cashFlowsStructi(
# 819 "bondsKernelsGpu.cu"
solverStruct solver, 
# 820 "bondsKernelsGpu.cu"
irrFinderStruct f, 
# 821 "bondsKernelsGpu.cu"
dataType accuracy, 
# 822 "bondsKernelsGpu.cu"
dataType guess, 
# 823 "bondsKernelsGpu.cu"
dataType step, 
# 824 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 825 "bondsKernelsGpu.cu"
int numLegs){
# 825 "bondsKernelsGpu.cu"
{
# 826 "bondsKernelsGpu.cu"
{
# 830 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43239_11_non_const_growthFactor;
# 831 "bondsKernelsGpu.cu"
 int __cuda_local_var_43240_6_non_const_flipflop;
# 828 "bondsKernelsGpu.cu"
accuracy = ((accuracy > (1.000000045813704966e-18)) ? accuracy : (1.000000045813704966e-18));
# 830 "bondsKernelsGpu.cu"
__cuda_local_var_43239_11_non_const_growthFactor = (1.600000000000000089);
# 831 "bondsKernelsGpu.cu"
__cuda_local_var_43240_6_non_const_flipflop = (-1);
# 833 "bondsKernelsGpu.cu"
(solver.root_) = guess;
# 834 "bondsKernelsGpu.cu"
(solver.fxMax_) = (_Z6fOpGpu15irrFinderStructd15cashFlowsStructi(f, (solver.root_), cashFlows, numLegs));
# 837 "bondsKernelsGpu.cu"
if (_Z8closeGpudd((solver.fxMax_), (0.0)))
# 838 "bondsKernelsGpu.cu"
{
# 839 "bondsKernelsGpu.cu"
return solver.root_;
# 840 "bondsKernelsGpu.cu"
}
# 840 "bondsKernelsGpu.cu"
else 
# 840 "bondsKernelsGpu.cu"
{
# 841 "bondsKernelsGpu.cu"
if (_Z8closeGpudd((solver.fxMax_), (0.0)))
# 842 "bondsKernelsGpu.cu"
{
# 843 "bondsKernelsGpu.cu"
(solver.xMin_) = ((solver.root_) - step);
# 844 "bondsKernelsGpu.cu"
(solver.fxMin_) = (_Z6fOpGpu15irrFinderStructd15cashFlowsStructi(f, (solver.xMin_), cashFlows, numLegs));
# 845 "bondsKernelsGpu.cu"
(solver.xMax_) = (solver.root_);
# 846 "bondsKernelsGpu.cu"
}
# 848 "bondsKernelsGpu.cu"
else 
# 848 "bondsKernelsGpu.cu"
{
# 849 "bondsKernelsGpu.cu"
(solver.xMin_) = (solver.root_);
# 850 "bondsKernelsGpu.cu"
(solver.fxMin_) = (solver.fxMax_);
# 851 "bondsKernelsGpu.cu"
(solver.xMax_) = ((solver.root_) + step);
# 852 "bondsKernelsGpu.cu"
(solver.fxMax_) = (_Z6fOpGpu15irrFinderStructd15cashFlowsStructi(f, (solver.xMax_), cashFlows, numLegs));
# 853 "bondsKernelsGpu.cu"
}
# 853 "bondsKernelsGpu.cu"
}
# 855 "bondsKernelsGpu.cu"
(solver.evaluationNumber_) = 2;
# 856 "bondsKernelsGpu.cu"
while ((solver.evaluationNumber_) <= (solver.maxEvaluations_))
# 857 "bondsKernelsGpu.cu"
{
# 858 "bondsKernelsGpu.cu"
if (((solver.fxMin_) * (solver.fxMax_)) <= (0.0))
# 859 "bondsKernelsGpu.cu"
{
# 860 "bondsKernelsGpu.cu"
if (_Z8closeGpudd((solver.fxMin_), (0.0)))
# 860 "bondsKernelsGpu.cu"
{
# 861 "bondsKernelsGpu.cu"
return solver.xMin_;
# 861 "bondsKernelsGpu.cu"
}
# 862 "bondsKernelsGpu.cu"
if (_Z8closeGpudd((solver.fxMax_), (0.0)))
# 862 "bondsKernelsGpu.cu"
{
# 863 "bondsKernelsGpu.cu"
return solver.xMax_;
# 863 "bondsKernelsGpu.cu"
}
# 864 "bondsKernelsGpu.cu"
(solver.root_) = ((dataType)(fdivide(((solver.xMax_) + (solver.xMin_)), (2.0))));
# 865 "bondsKernelsGpu.cu"
return _Z12solveImplGpu12solverStruct15irrFinderStructd15cashFlowsStructi(solver, f, accuracy, cashFlows, numLegs);
# 866 "bondsKernelsGpu.cu"
}
# 867 "bondsKernelsGpu.cu"
if ((fabs((solver.fxMin_))) < (fabs((solver.fxMax_))))
# 868 "bondsKernelsGpu.cu"
{
# 869 "bondsKernelsGpu.cu"
(solver.xMin_) = ((solver.xMin_) + (__cuda_local_var_43239_11_non_const_growthFactor * ((solver.xMin_) - (solver.xMax_))));
# 870 "bondsKernelsGpu.cu"
(solver.fxMin_) = (_Z6fOpGpu15irrFinderStructd15cashFlowsStructi(f, (solver.xMin_), cashFlows, numLegs));
# 871 "bondsKernelsGpu.cu"
}
# 871 "bondsKernelsGpu.cu"
else 
# 871 "bondsKernelsGpu.cu"
{
# 872 "bondsKernelsGpu.cu"
if ((fabs((solver.fxMin_))) > (fabs((solver.fxMax_))))
# 873 "bondsKernelsGpu.cu"
{
# 874 "bondsKernelsGpu.cu"
(solver.xMax_) = ((solver.xMax_) + (__cuda_local_var_43239_11_non_const_growthFactor * ((solver.xMax_) - (solver.xMin_))));
# 875 "bondsKernelsGpu.cu"
(solver.fxMax_) = (_Z6fOpGpu15irrFinderStructd15cashFlowsStructi(f, (solver.xMax_), cashFlows, numLegs));
# 876 "bondsKernelsGpu.cu"
}
# 876 "bondsKernelsGpu.cu"
else 
# 876 "bondsKernelsGpu.cu"
{
# 877 "bondsKernelsGpu.cu"
if (__cuda_local_var_43240_6_non_const_flipflop == (-1))
# 878 "bondsKernelsGpu.cu"
{
# 879 "bondsKernelsGpu.cu"
(solver.xMin_) = ((solver.xMin_) + (__cuda_local_var_43239_11_non_const_growthFactor * ((solver.xMin_) - (solver.xMax_))));
# 880 "bondsKernelsGpu.cu"
(solver.fxMin_) = (_Z6fOpGpu15irrFinderStructd15cashFlowsStructi(f, (solver.xMin_), cashFlows, numLegs));
# 881 "bondsKernelsGpu.cu"
(solver.evaluationNumber_)++;
# 882 "bondsKernelsGpu.cu"
__cuda_local_var_43240_6_non_const_flipflop = 1;
# 883 "bondsKernelsGpu.cu"
}
# 883 "bondsKernelsGpu.cu"
else 
# 883 "bondsKernelsGpu.cu"
{
# 884 "bondsKernelsGpu.cu"
if (__cuda_local_var_43240_6_non_const_flipflop == 1)
# 885 "bondsKernelsGpu.cu"
{
# 886 "bondsKernelsGpu.cu"
(solver.xMax_) = ((solver.xMax_) + (__cuda_local_var_43239_11_non_const_growthFactor * ((solver.xMax_) - (solver.xMin_))));
# 887 "bondsKernelsGpu.cu"
(solver.fxMax_) = (_Z6fOpGpu15irrFinderStructd15cashFlowsStructi(f, (solver.xMax_), cashFlows, numLegs));
# 888 "bondsKernelsGpu.cu"
__cuda_local_var_43240_6_non_const_flipflop = (-1);
# 889 "bondsKernelsGpu.cu"
}
# 889 "bondsKernelsGpu.cu"
}
# 889 "bondsKernelsGpu.cu"
}
# 889 "bondsKernelsGpu.cu"
}
# 890 "bondsKernelsGpu.cu"
(solver.evaluationNumber_)++;
# 891 "bondsKernelsGpu.cu"
}
# 893 "bondsKernelsGpu.cu"
return (0.0);
# 894 "bondsKernelsGpu.cu"
}
# 894 "bondsKernelsGpu.cu"
}}
# 897 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z20cashFlowsNpvYieldGpu15cashFlowsStruct13intRateStructb15bondsDateStructS1_i(
# 897 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 898 "bondsKernelsGpu.cu"
intRateStruct y, 
# 899 "bondsKernelsGpu.cu"
__nv_bool includecurrDateFlows, 
# 900 "bondsKernelsGpu.cu"
bondsDateStruct currDate, 
# 901 "bondsKernelsGpu.cu"
bondsDateStruct npvDate, 
# 902 "bondsKernelsGpu.cu"
int numLegs){
# 902 "bondsKernelsGpu.cu"
{
# 903 "bondsKernelsGpu.cu"
{
# 904 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43313_18_non_const_npv;
# 905 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43314_18_non_const_discount;
# 906 "bondsKernelsGpu.cu"
 bondsDateStruct __cuda_local_var_43315_25_non_const_lastDate;
# 907 "bondsKernelsGpu.cu"
 __nv_bool __cuda_local_var_43316_7_non_const_first;
# 909 "bondsKernelsGpu.cu"
 int __cuda_local_var_43318_6_non_const_i;
# 904 "bondsKernelsGpu.cu"
__cuda_local_var_43313_18_non_const_npv = (0.0);
# 905 "bondsKernelsGpu.cu"
__cuda_local_var_43314_18_non_const_discount = (1.0);
# 907 "bondsKernelsGpu.cu"
__cuda_local_var_43316_7_non_const_first = ((__nv_bool)1);
# 910 "bondsKernelsGpu.cu"
for (__cuda_local_var_43318_6_non_const_i = 0; (__cuda_local_var_43318_6_non_const_i < numLegs); ++__cuda_local_var_43318_6_non_const_i)
# 910 "bondsKernelsGpu.cu"
{
# 911 "bondsKernelsGpu.cu"
{
# 917 "bondsKernelsGpu.cu"
 bondsDateStruct __cuda_local_var_43326_29_non_const_couponDate;
# 918 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43327_22_non_const_amount;
# 914 "bondsKernelsGpu.cu"
if (_Z22cashFlowHasOccurredGpu15bondsDateStructS_((((cashFlows.legs)[__cuda_local_var_43318_6_non_const_i]).paymentDate), currDate))
# 914 "bondsKernelsGpu.cu"
{
# 915 "bondsKernelsGpu.cu"
goto __T21;
# 915 "bondsKernelsGpu.cu"
}
# 917 "bondsKernelsGpu.cu"
__cuda_local_var_43326_29_non_const_couponDate = (((cashFlows.legs)[__cuda_local_var_43318_6_non_const_i]).paymentDate);
# 918 "bondsKernelsGpu.cu"
__cuda_local_var_43327_22_non_const_amount = (_Z24fixedRateCouponAmountGpu15cashFlowsStructi(cashFlows, __cuda_local_var_43318_6_non_const_i));
# 919 "bondsKernelsGpu.cu"
if (__cuda_local_var_43316_7_non_const_first)
# 920 "bondsKernelsGpu.cu"
{
# 921 "bondsKernelsGpu.cu"
__cuda_local_var_43316_7_non_const_first = ((__nv_bool)0);
# 922 "bondsKernelsGpu.cu"
if (__cuda_local_var_43318_6_non_const_i > 0)
# 922 "bondsKernelsGpu.cu"
{
# 923 "bondsKernelsGpu.cu"
__cuda_local_var_43315_25_non_const_lastDate = (_Z14advanceDateGpu15bondsDateStructi((((cashFlows.legs)[__cuda_local_var_43318_6_non_const_i]).paymentDate), (-6)));
# 924 "bondsKernelsGpu.cu"
}
# 924 "bondsKernelsGpu.cu"
else 
# 924 "bondsKernelsGpu.cu"
{
# 925 "bondsKernelsGpu.cu"
__cuda_local_var_43315_25_non_const_lastDate = (((cashFlows.legs)[__cuda_local_var_43318_6_non_const_i]).accrualStartDate);
# 926 "bondsKernelsGpu.cu"
}
# 927 "bondsKernelsGpu.cu"
__cuda_local_var_43314_18_non_const_discount *= (_Z29interestRateDiscountFactorGpu13intRateStructd(y, (_Z15yearFractionGpu15bondsDateStructS_i(npvDate, __cuda_local_var_43326_29_non_const_couponDate, (y.dayCounter)))));
# 928 "bondsKernelsGpu.cu"
}
# 930 "bondsKernelsGpu.cu"
else 
# 930 "bondsKernelsGpu.cu"
{
# 931 "bondsKernelsGpu.cu"
__cuda_local_var_43314_18_non_const_discount *= (_Z29interestRateDiscountFactorGpu13intRateStructd(y, (_Z15yearFractionGpu15bondsDateStructS_i(__cuda_local_var_43315_25_non_const_lastDate, __cuda_local_var_43326_29_non_const_couponDate, (y.dayCounter)))));
# 932 "bondsKernelsGpu.cu"
}
# 934 "bondsKernelsGpu.cu"
__cuda_local_var_43315_25_non_const_lastDate = __cuda_local_var_43326_29_non_const_couponDate;
# 936 "bondsKernelsGpu.cu"
__cuda_local_var_43313_18_non_const_npv += (__cuda_local_var_43327_22_non_const_amount * __cuda_local_var_43314_18_non_const_discount);
# 937 "bondsKernelsGpu.cu"
}
# 937 "bondsKernelsGpu.cu"
__T21:;
# 937 "bondsKernelsGpu.cu"
;
# 937 "bondsKernelsGpu.cu"
}
# 939 "bondsKernelsGpu.cu"
return __cuda_local_var_43313_18_non_const_npv;
# 940 "bondsKernelsGpu.cu"
}
# 940 "bondsKernelsGpu.cu"
}}
# 942 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z6fOpGpu15irrFinderStructd15cashFlowsStructi(
# 942 "bondsKernelsGpu.cu"
irrFinderStruct f, 
# 942 "bondsKernelsGpu.cu"
dataType y, 
# 942 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 942 "bondsKernelsGpu.cu"
int numLegs){
# 942 "bondsKernelsGpu.cu"
{
# 943 "bondsKernelsGpu.cu"
{
# 944 "bondsKernelsGpu.cu"
 intRateStruct __cuda_local_var_43353_16_non_const_yield;
# 951 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43360_11_non_const_NPV;
# 946 "bondsKernelsGpu.cu"
(__cuda_local_var_43353_16_non_const_yield.rate) = y;
# 947 "bondsKernelsGpu.cu"
(__cuda_local_var_43353_16_non_const_yield.comp) = (f.comp);
# 948 "bondsKernelsGpu.cu"
(__cuda_local_var_43353_16_non_const_yield.freq) = (f.freq);
# 949 "bondsKernelsGpu.cu"
(__cuda_local_var_43353_16_non_const_yield.dayCounter) = (f.dayCounter);
# 951 "bondsKernelsGpu.cu"
__cuda_local_var_43360_11_non_const_NPV = (_Z20cashFlowsNpvYieldGpu15cashFlowsStruct13intRateStructb15bondsDateStructS1_i(cashFlows, __cuda_local_var_43353_16_non_const_yield, ((__nv_bool)0), (f.currDate), (f.npvDate), numLegs));
# 958 "bondsKernelsGpu.cu"
return (f.npv) - __cuda_local_var_43360_11_non_const_NPV;
# 959 "bondsKernelsGpu.cu"
}
# 959 "bondsKernelsGpu.cu"
}}
# 963 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z14fDerivativeGpu15irrFinderStructd15cashFlowsStructi(
# 963 "bondsKernelsGpu.cu"
irrFinderStruct f, 
# 963 "bondsKernelsGpu.cu"
dataType y, 
# 963 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 963 "bondsKernelsGpu.cu"
int numLegs){
# 963 "bondsKernelsGpu.cu"
{
# 964 "bondsKernelsGpu.cu"
{
# 965 "bondsKernelsGpu.cu"
 intRateStruct __cuda_local_var_43374_16_non_const_yield;
# 966 "bondsKernelsGpu.cu"
(__cuda_local_var_43374_16_non_const_yield.rate) = y;
# 967 "bondsKernelsGpu.cu"
(__cuda_local_var_43374_16_non_const_yield.dayCounter) = (f.dayCounter);
# 968 "bondsKernelsGpu.cu"
(__cuda_local_var_43374_16_non_const_yield.comp) = (f.comp);
# 969 "bondsKernelsGpu.cu"
(__cuda_local_var_43374_16_non_const_yield.freq) = (f.freq);
# 972 "bondsKernelsGpu.cu"
return _Z19modifiedDurationGpu15cashFlowsStruct13intRateStructb15bondsDateStructS1_i(cashFlows, __cuda_local_var_43374_16_non_const_yield, (f.includecurrDateFlows), (f.currDate), (f.npvDate), numLegs);
# 975 "bondsKernelsGpu.cu"
}
# 975 "bondsKernelsGpu.cu"
}}
# 978 "bondsKernelsGpu.cu"
___device__( __no_sc__) __nv_bool _Z8closeGpudd(
# 978 "bondsKernelsGpu.cu"
dataType x, 
# 978 "bondsKernelsGpu.cu"
dataType y){
# 978 "bondsKernelsGpu.cu"
{
# 979 "bondsKernelsGpu.cu"
{
# 980 "bondsKernelsGpu.cu"
return _Z17closeGpuThreeArgsddi(x, y, 42);
# 981 "bondsKernelsGpu.cu"
}
# 981 "bondsKernelsGpu.cu"
}}
# 984 "bondsKernelsGpu.cu"
___device__( __no_sc__) __nv_bool _Z17closeGpuThreeArgsddi(
# 984 "bondsKernelsGpu.cu"
dataType x, 
# 984 "bondsKernelsGpu.cu"
dataType y, 
# 984 "bondsKernelsGpu.cu"
int n){
# 984 "bondsKernelsGpu.cu"
{
# 985 "bondsKernelsGpu.cu"
{
# 986 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43395_11_non_const_diff;
# 987 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43396_11_non_const_tolerance;
# 986 "bondsKernelsGpu.cu"
__cuda_local_var_43395_11_non_const_diff = (fabs((x - y)));
# 987 "bondsKernelsGpu.cu"
__cuda_local_var_43396_11_non_const_tolerance = ((dataType)(((float)n) * (1.000000046e-18F)));
# 989 "bondsKernelsGpu.cu"
return (__nv_bool)((__cuda_local_var_43395_11_non_const_diff <= (__cuda_local_var_43396_11_non_const_tolerance * (fabs(x)))) && (__cuda_local_var_43395_11_non_const_diff <= (__cuda_local_var_43396_11_non_const_tolerance * (fabs(y)))));
# 991 "bondsKernelsGpu.cu"
}
# 991 "bondsKernelsGpu.cu"
}}
# 994 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z16enforceBoundsGpud(
# 994 "bondsKernelsGpu.cu"
dataType x){
# 994 "bondsKernelsGpu.cu"
{
# 995 "bondsKernelsGpu.cu"
{
# 1000 "bondsKernelsGpu.cu"
return x;
# 1001 "bondsKernelsGpu.cu"
}
# 1001 "bondsKernelsGpu.cu"
}}
# 1004 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z12solveImplGpu12solverStruct15irrFinderStructd15cashFlowsStructi(
# 1004 "bondsKernelsGpu.cu"
solverStruct solver, 
# 1004 "bondsKernelsGpu.cu"
irrFinderStruct f, 
# 1005 "bondsKernelsGpu.cu"
dataType xAccuracy, 
# 1005 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 1005 "bondsKernelsGpu.cu"
int numLegs){
# 1005 "bondsKernelsGpu.cu"
{
# 1006 "bondsKernelsGpu.cu"
{
# 1007 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43416_11_non_const_froot;
# 1007 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43416_18_non_const_dfroot;
# 1007 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43416_26_non_const_dx;
# 1007 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43416_30_non_const_dxold;
# 1008 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43417_11_non_const_xh;
# 1008 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43417_15_non_const_xl;
# 1011 "bondsKernelsGpu.cu"
if ((solver.fxMin_) < (0.0))
# 1012 "bondsKernelsGpu.cu"
{
# 1013 "bondsKernelsGpu.cu"
__cuda_local_var_43417_15_non_const_xl = (solver.xMin_);
# 1014 "bondsKernelsGpu.cu"
__cuda_local_var_43417_11_non_const_xh = (solver.xMax_);
# 1015 "bondsKernelsGpu.cu"
}
# 1017 "bondsKernelsGpu.cu"
else 
# 1017 "bondsKernelsGpu.cu"
{
# 1018 "bondsKernelsGpu.cu"
__cuda_local_var_43417_11_non_const_xh = (solver.xMin_);
# 1019 "bondsKernelsGpu.cu"
__cuda_local_var_43417_15_non_const_xl = (solver.xMax_);
# 1020 "bondsKernelsGpu.cu"
}
# 1023 "bondsKernelsGpu.cu"
__cuda_local_var_43416_30_non_const_dxold = ((solver.xMax_) - (solver.xMin_));
# 1028 "bondsKernelsGpu.cu"
__cuda_local_var_43416_26_non_const_dx = __cuda_local_var_43416_30_non_const_dxold;
# 1030 "bondsKernelsGpu.cu"
__cuda_local_var_43416_11_non_const_froot = (_Z6fOpGpu15irrFinderStructd15cashFlowsStructi(f, (solver.root_), cashFlows, numLegs));
# 1031 "bondsKernelsGpu.cu"
__cuda_local_var_43416_18_non_const_dfroot = (_Z14fDerivativeGpu15irrFinderStructd15cashFlowsStructi(f, (solver.root_), cashFlows, numLegs));
# 1033 "bondsKernelsGpu.cu"
++(solver.evaluationNumber_);
# 1035 "bondsKernelsGpu.cu"
while ((solver.evaluationNumber_) <= (solver.maxEvaluations_))
# 1036 "bondsKernelsGpu.cu"
{
# 1038 "bondsKernelsGpu.cu"
if (((((((solver.root_) - __cuda_local_var_43417_11_non_const_xh) * __cuda_local_var_43416_18_non_const_dfroot) - __cuda_local_var_43416_11_non_const_froot) * ((((solver.root_) - __cuda_local_var_43417_15_non_const_xl) * __cuda_local_var_43416_18_non_const_dfroot) - __cuda_local_var_43416_11_non_const_froot)) > (0.0)) || ((fabs(((2.0) * __cuda_local_var_43416_11_non_const_froot))) > (fabs((__cuda_local_var_43416_30_non_const_dxold * __cuda_local_var_43416_18_non_const_dfroot)))))
# 1041 "bondsKernelsGpu.cu"
{
# 1042 "bondsKernelsGpu.cu"
__cuda_local_var_43416_30_non_const_dxold = __cuda_local_var_43416_26_non_const_dx;
# 1043 "bondsKernelsGpu.cu"
__cuda_local_var_43416_26_non_const_dx = ((dataType)(fdivide((__cuda_local_var_43417_11_non_const_xh - __cuda_local_var_43417_15_non_const_xl), (2.0))));
# 1044 "bondsKernelsGpu.cu"
(solver.root_) = (__cuda_local_var_43417_15_non_const_xl + __cuda_local_var_43416_26_non_const_dx);
# 1045 "bondsKernelsGpu.cu"
}
# 1047 "bondsKernelsGpu.cu"
else 
# 1047 "bondsKernelsGpu.cu"
{
# 1048 "bondsKernelsGpu.cu"
__cuda_local_var_43416_30_non_const_dxold = __cuda_local_var_43416_26_non_const_dx;
# 1049 "bondsKernelsGpu.cu"
__cuda_local_var_43416_26_non_const_dx = ((dataType)(fdivide(__cuda_local_var_43416_11_non_const_froot, __cuda_local_var_43416_18_non_const_dfroot)));
# 1050 "bondsKernelsGpu.cu"
(solver.root_) -= __cuda_local_var_43416_26_non_const_dx;
# 1051 "bondsKernelsGpu.cu"
}
# 1054 "bondsKernelsGpu.cu"
if ((fabs(__cuda_local_var_43416_26_non_const_dx)) < xAccuracy)
# 1054 "bondsKernelsGpu.cu"
{
# 1055 "bondsKernelsGpu.cu"
return solver.root_;
# 1055 "bondsKernelsGpu.cu"
}
# 1056 "bondsKernelsGpu.cu"
__cuda_local_var_43416_11_non_const_froot = (_Z6fOpGpu15irrFinderStructd15cashFlowsStructi(f, (solver.root_), cashFlows, numLegs));
# 1057 "bondsKernelsGpu.cu"
__cuda_local_var_43416_18_non_const_dfroot = (_Z14fDerivativeGpu15irrFinderStructd15cashFlowsStructi(f, (solver.root_), cashFlows, numLegs));
# 1058 "bondsKernelsGpu.cu"
++(solver.evaluationNumber_);
# 1059 "bondsKernelsGpu.cu"
if (__cuda_local_var_43416_11_non_const_froot < (0.0))
# 1059 "bondsKernelsGpu.cu"
{
# 1060 "bondsKernelsGpu.cu"
__cuda_local_var_43417_15_non_const_xl = (solver.root_);
# 1060 "bondsKernelsGpu.cu"
}
# 1060 "bondsKernelsGpu.cu"
else 
# 1060 "bondsKernelsGpu.cu"
{
# 1062 "bondsKernelsGpu.cu"
__cuda_local_var_43417_11_non_const_xh = (solver.root_);
# 1062 "bondsKernelsGpu.cu"
}
# 1063 "bondsKernelsGpu.cu"
}
# 1065 "bondsKernelsGpu.cu"
return solver.root_;
# 1066 "bondsKernelsGpu.cu"
}
# 1066 "bondsKernelsGpu.cu"
}}
# 1071 "bondsKernelsGpu.cu"
___device__( __no_sc__) dataType _Z19modifiedDurationGpu15cashFlowsStruct13intRateStructb15bondsDateStructS1_i(
# 1071 "bondsKernelsGpu.cu"
cashFlowsStruct cashFlows, 
# 1072 "bondsKernelsGpu.cu"
intRateStruct y, 
# 1073 "bondsKernelsGpu.cu"
__nv_bool includecurrDateFlows, 
# 1074 "bondsKernelsGpu.cu"
bondsDateStruct currDate, 
# 1075 "bondsKernelsGpu.cu"
bondsDateStruct npvDate, 
# 1076 "bondsKernelsGpu.cu"
int numLegs){
# 1076 "bondsKernelsGpu.cu"
{
# 1077 "bondsKernelsGpu.cu"
{
# 1078 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43487_11_non_const_P;
# 1079 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43488_11_non_const_dPdy;
# 1080 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43489_11_non_const_r;
# 1081 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43490_11_non_const_N;
# 1082 "bondsKernelsGpu.cu"
 int __cuda_local_var_43491_6_non_const_dc;
# 1084 "bondsKernelsGpu.cu"
 int __cuda_local_var_43493_6_non_const_i;
# 1078 "bondsKernelsGpu.cu"
__cuda_local_var_43487_11_non_const_P = (0.0);
# 1079 "bondsKernelsGpu.cu"
__cuda_local_var_43488_11_non_const_dPdy = (0.0);
# 1080 "bondsKernelsGpu.cu"
__cuda_local_var_43489_11_non_const_r = (y.rate);
# 1081 "bondsKernelsGpu.cu"
__cuda_local_var_43490_11_non_const_N = (y.freq);
# 1082 "bondsKernelsGpu.cu"
__cuda_local_var_43491_6_non_const_dc = (y.dayCounter);
# 1085 "bondsKernelsGpu.cu"
for (__cuda_local_var_43493_6_non_const_i = 0; (__cuda_local_var_43493_6_non_const_i < numLegs); ++__cuda_local_var_43493_6_non_const_i)
# 1086 "bondsKernelsGpu.cu"
{
# 1089 "bondsKernelsGpu.cu"
if (!(_Z22cashFlowHasOccurredGpu15bondsDateStructS_((((cashFlows.legs)[__cuda_local_var_43493_6_non_const_i]).paymentDate), currDate)))
# 1090 "bondsKernelsGpu.cu"
{
# 1091 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43500_13_non_const_t;
# 1093 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43502_13_non_const_c;
# 1094 "bondsKernelsGpu.cu"
 dataType __cuda_local_var_43503_13_non_const_B;
# 1091 "bondsKernelsGpu.cu"
__cuda_local_var_43500_13_non_const_t = (_Z15yearFractionGpu15bondsDateStructS_i(npvDate, (((cashFlows.legs)[__cuda_local_var_43493_6_non_const_i]).paymentDate), __cuda_local_var_43491_6_non_const_dc));
# 1093 "bondsKernelsGpu.cu"
__cuda_local_var_43502_13_non_const_c = (_Z24fixedRateCouponAmountGpu15cashFlowsStructi(cashFlows, __cuda_local_var_43493_6_non_const_i));
# 1094 "bondsKernelsGpu.cu"
__cuda_local_var_43503_13_non_const_B = (_Z29interestRateDiscountFactorGpu13intRateStructd(y, __cuda_local_var_43500_13_non_const_t));
# 1096 "bondsKernelsGpu.cu"
__cuda_local_var_43487_11_non_const_P += (__cuda_local_var_43502_13_non_const_c * __cuda_local_var_43503_13_non_const_B);
# 1098 "bondsKernelsGpu.cu"
{
# 1099 "bondsKernelsGpu.cu"
if ((y.comp) == 0)
# 1099 "bondsKernelsGpu.cu"
{
# 1100 "bondsKernelsGpu.cu"
__cuda_local_var_43488_11_non_const_dPdy -= (((__cuda_local_var_43502_13_non_const_c * __cuda_local_var_43503_13_non_const_B) * __cuda_local_var_43503_13_non_const_B) * __cuda_local_var_43500_13_non_const_t);
# 1100 "bondsKernelsGpu.cu"
}
# 1101 "bondsKernelsGpu.cu"
if ((y.comp) == 1)
# 1101 "bondsKernelsGpu.cu"
{
# 1102 "bondsKernelsGpu.cu"
__cuda_local_var_43488_11_non_const_dPdy -= ((double)(fdivide(((__cuda_local_var_43502_13_non_const_c * __cuda_local_var_43500_13_non_const_t) * __cuda_local_var_43503_13_non_const_B), ((1.0) + ((double)(fdivide(__cuda_local_var_43489_11_non_const_r, __cuda_local_var_43490_11_non_const_N)))))));
# 1102 "bondsKernelsGpu.cu"
}
# 1103 "bondsKernelsGpu.cu"
if ((y.comp) == 2)
# 1103 "bondsKernelsGpu.cu"
{
# 1104 "bondsKernelsGpu.cu"
__cuda_local_var_43488_11_non_const_dPdy -= ((__cuda_local_var_43502_13_non_const_c * __cuda_local_var_43503_13_non_const_B) * __cuda_local_var_43500_13_non_const_t);
# 1104 "bondsKernelsGpu.cu"
}
# 1105 "bondsKernelsGpu.cu"
if ((y.comp) == 3)
# 1106 "bondsKernelsGpu.cu"
{
# 1107 "bondsKernelsGpu.cu"
if (__cuda_local_var_43500_13_non_const_t <= ((1.0) / __cuda_local_var_43490_11_non_const_N))
# 1107 "bondsKernelsGpu.cu"
{
# 1108 "bondsKernelsGpu.cu"
__cuda_local_var_43488_11_non_const_dPdy -= (((__cuda_local_var_43502_13_non_const_c * __cuda_local_var_43503_13_non_const_B) * __cuda_local_var_43503_13_non_const_B) * __cuda_local_var_43500_13_non_const_t);
# 1108 "bondsKernelsGpu.cu"
}
# 1108 "bondsKernelsGpu.cu"
else 
# 1108 "bondsKernelsGpu.cu"
{
# 1110 "bondsKernelsGpu.cu"
__cuda_local_var_43488_11_non_const_dPdy -= ((double)(fdivide(((__cuda_local_var_43502_13_non_const_c * __cuda_local_var_43500_13_non_const_t) * __cuda_local_var_43503_13_non_const_B), ((1.0) + ((double)(fdivide(__cuda_local_var_43489_11_non_const_r, __cuda_local_var_43490_11_non_const_N)))))));
# 1110 "bondsKernelsGpu.cu"
}
# 1111 "bondsKernelsGpu.cu"
}
# 1112 "bondsKernelsGpu.cu"
}
# 1113 "bondsKernelsGpu.cu"
}
# 1114 "bondsKernelsGpu.cu"
}
# 1116 "bondsKernelsGpu.cu"
if (__cuda_local_var_43487_11_non_const_P == (0.0))
# 1117 "bondsKernelsGpu.cu"
{
# 1118 "bondsKernelsGpu.cu"
return (0.0);
# 1119 "bondsKernelsGpu.cu"
}
# 1120 "bondsKernelsGpu.cu"
return (dataType)(fdivide(((-1.0) * __cuda_local_var_43488_11_non_const_dPdy), __cuda_local_var_43487_11_non_const_P));
# 1121 "bondsKernelsGpu.cu"
}
# 1121 "bondsKernelsGpu.cu"
}}
# 1124 "bondsKernelsGpu.cu"
__global__ __var_used__ void _Z18getBondsResultsGpu12inArgsStruct13resultsStructi(
# 1124 "bondsKernelsGpu.cu"
inArgsStruct inArgs, 
# 1125 "bondsKernelsGpu.cu"
resultsStruct results, 
# 1126 "bondsKernelsGpu.cu"
int n){
# 1126 "bondsKernelsGpu.cu"
{
# 1127 "bondsKernelsGpu.cu"
{
# 1128 "bondsKernelsGpu.cu"
 int __cuda_local_var_43537_6_non_const_bondNum;
# 1128 "bondsKernelsGpu.cu"
__cuda_local_var_43537_6_non_const_bondNum = ((int)(((blockIdx.x) * (blockDim.x)) + (threadIdx.x)));
# 1129 "bondsKernelsGpu.cu"
if (__cuda_local_var_43537_6_non_const_bondNum < n)
# 1130 "bondsKernelsGpu.cu"
{
# 1131 "bondsKernelsGpu.cu"
 int __cuda_local_var_43540_7_non_const_numLegs;
# 1133 "bondsKernelsGpu.cu"
 int __cuda_local_var_43542_7_non_const_numCashFlows;
# 1136 "bondsKernelsGpu.cu"
 bondsDateStruct __cuda_local_var_43545_19_non_const_currCashflowDate;
# 1149 "bondsKernelsGpu.cu"
 cashFlowsStruct __cuda_local_var_43558_24_non_const_cashFlows;
# 1150 "bondsKernelsGpu.cu"
 couponStruct __cuda_local_var_43559_16_non_const_cashLegs[9];
# 1161 "bondsKernelsGpu.cu"
 bondsDateStruct __cuda_local_var_43570_19_non_const_currStartDate;
# 1162 "bondsKernelsGpu.cu"
 bondsDateStruct __cuda_local_var_43571_19_non_const_currEndDate;
# 1164 "bondsKernelsGpu.cu"
 int __cuda_local_var_43573_7_non_const_cashFlowNum;
# 1133 "bondsKernelsGpu.cu"
__cuda_local_var_43542_7_non_const_numCashFlows = 0;
# 1136 "bondsKernelsGpu.cu"
__cuda_local_var_43545_19_non_const_currCashflowDate = (((inArgs.bond)[__cuda_local_var_43537_6_non_const_bondNum]).maturityDate);
# 1138 "bondsKernelsGpu.cu"
while ((__cuda_local_var_43545_19_non_const_currCashflowDate.dateSerialNum) > ((((inArgs.bond)[__cuda_local_var_43537_6_non_const_bondNum]).startDate).dateSerialNum))
# 1139 "bondsKernelsGpu.cu"
{
# 1140 "bondsKernelsGpu.cu"
__cuda_local_var_43542_7_non_const_numCashFlows++;
# 1141 "bondsKernelsGpu.cu"
__cuda_local_var_43545_19_non_const_currCashflowDate = (_Z14advanceDateGpu15bondsDateStructi(__cuda_local_var_43545_19_non_const_currCashflowDate, (-6)));
# 1142 "bondsKernelsGpu.cu"
}
# 1144 "bondsKernelsGpu.cu"
__cuda_local_var_43540_7_non_const_numLegs = (__cuda_local_var_43542_7_non_const_numCashFlows + 1);
# 1151 "bondsKernelsGpu.cu"
(__cuda_local_var_43558_24_non_const_cashFlows.legs) = (__cuda_local_var_43559_16_non_const_cashLegs);
# 1153 "bondsKernelsGpu.cu"
((__cuda_local_var_43558_24_non_const_cashFlows.intRate).dayCounter) = 0;
# 1154 "bondsKernelsGpu.cu"
((__cuda_local_var_43558_24_non_const_cashFlows.intRate).rate) = ((dataType)(((inArgs.bond)[__cuda_local_var_43537_6_non_const_bondNum]).rate));
# 1155 "bondsKernelsGpu.cu"
((__cuda_local_var_43558_24_non_const_cashFlows.intRate).freq) = (1.0);
# 1156 "bondsKernelsGpu.cu"
((__cuda_local_var_43558_24_non_const_cashFlows.intRate).comp) = 0;
# 1157 "bondsKernelsGpu.cu"
(__cuda_local_var_43558_24_non_const_cashFlows.dayCounter) = 0;
# 1158 "bondsKernelsGpu.cu"
(__cuda_local_var_43558_24_non_const_cashFlows.nominal) = 100;
# 1161 "bondsKernelsGpu.cu"
__cuda_local_var_43570_19_non_const_currStartDate = (_Z14advanceDateGpu15bondsDateStructi((((inArgs.bond)[__cuda_local_var_43537_6_non_const_bondNum]).maturityDate), ((__cuda_local_var_43540_7_non_const_numLegs - 1) * (-6))));
# 1161 "bondsKernelsGpu.cu"
;
# 1162 "bondsKernelsGpu.cu"
__cuda_local_var_43571_19_non_const_currEndDate = (_Z14advanceDateGpu15bondsDateStructi(__cuda_local_var_43570_19_non_const_currStartDate, 6));
# 1165 "bondsKernelsGpu.cu"
for (__cuda_local_var_43573_7_non_const_cashFlowNum = 0; (__cuda_local_var_43573_7_non_const_cashFlowNum < (__cuda_local_var_43540_7_non_const_numLegs - 1)); __cuda_local_var_43573_7_non_const_cashFlowNum++)
# 1166 "bondsKernelsGpu.cu"
{
# 1167 "bondsKernelsGpu.cu"
(((__cuda_local_var_43558_24_non_const_cashFlows.legs)[__cuda_local_var_43573_7_non_const_cashFlowNum]).paymentDate) = __cuda_local_var_43571_19_non_const_currEndDate;
# 1170 "bondsKernelsGpu.cu"
(((__cuda_local_var_43558_24_non_const_cashFlows.legs)[__cuda_local_var_43573_7_non_const_cashFlowNum]).accrualStartDate) = __cuda_local_var_43570_19_non_const_currStartDate;
# 1171 "bondsKernelsGpu.cu"
(((__cuda_local_var_43558_24_non_const_cashFlows.legs)[__cuda_local_var_43573_7_non_const_cashFlowNum]).accrualEndDate) = __cuda_local_var_43571_19_non_const_currEndDate;
# 1173 "bondsKernelsGpu.cu"
(((__cuda_local_var_43558_24_non_const_cashFlows.legs)[__cuda_local_var_43573_7_non_const_cashFlowNum]).amount) = (-1.0);
# 1175 "bondsKernelsGpu.cu"
__cuda_local_var_43570_19_non_const_currStartDate = __cuda_local_var_43571_19_non_const_currEndDate;
# 1176 "bondsKernelsGpu.cu"
__cuda_local_var_43571_19_non_const_currEndDate = (_Z14advanceDateGpu15bondsDateStructi(__cuda_local_var_43571_19_non_const_currEndDate, 6));
# 1177 "bondsKernelsGpu.cu"
}
# 1179 "bondsKernelsGpu.cu"
(((__cuda_local_var_43558_24_non_const_cashFlows.legs)[(__cuda_local_var_43540_7_non_const_numLegs - 1)]).paymentDate) = (((inArgs.bond)[__cuda_local_var_43537_6_non_const_bondNum]).maturityDate);
# 1180 "bondsKernelsGpu.cu"
(((__cuda_local_var_43558_24_non_const_cashFlows.legs)[(__cuda_local_var_43540_7_non_const_numLegs - 1)]).accrualStartDate) = ((inArgs.currDate)[__cuda_local_var_43537_6_non_const_bondNum]);
# 1181 "bondsKernelsGpu.cu"
(((__cuda_local_var_43558_24_non_const_cashFlows.legs)[(__cuda_local_var_43540_7_non_const_numLegs - 1)]).accrualEndDate) = ((inArgs.currDate)[__cuda_local_var_43537_6_non_const_bondNum]);
# 1182 "bondsKernelsGpu.cu"
(((__cuda_local_var_43558_24_non_const_cashFlows.legs)[(__cuda_local_var_43540_7_non_const_numLegs - 1)]).amount) = (100.0);
# 1184 "bondsKernelsGpu.cu"
((results.bondForwardVal)[__cuda_local_var_43537_6_non_const_bondNum]) = (_Z15getBondYieldGpudiid15bondsDateStructdi12inArgsStructi15cashFlowsStructi(((inArgs.bondCleanPrice)[__cuda_local_var_43537_6_non_const_bondNum]), 0, 1, (2.0), ((inArgs.currDate)[__cuda_local_var_43537_6_non_const_bondNum]), (1.000000000000000021e-08), 100, inArgs, __cuda_local_var_43537_6_non_const_bondNum, __cuda_local_var_43558_24_non_const_cashFlows, __cuda_local_var_43540_7_non_const_numLegs));
# 1192 "bondsKernelsGpu.cu"
(((inArgs.discountCurve)[__cuda_local_var_43537_6_non_const_bondNum]).forward) = ((results.bondForwardVal)[__cuda_local_var_43537_6_non_const_bondNum]);
# 1193 "bondsKernelsGpu.cu"
((results.dirtyPrice)[__cuda_local_var_43537_6_non_const_bondNum]) = (_Z16getDirtyPriceGpu12inArgsStructi15cashFlowsStructi(inArgs, __cuda_local_var_43537_6_non_const_bondNum, __cuda_local_var_43558_24_non_const_cashFlows, __cuda_local_var_43540_7_non_const_numLegs));
# 1194 "bondsKernelsGpu.cu"
((results.accruedAmountCurrDate)[__cuda_local_var_43537_6_non_const_bondNum]) = (_Z19getAccruedAmountGpu12inArgsStruct15bondsDateStructi15cashFlowsStructi(inArgs, ((inArgs.currDate)[__cuda_local_var_43537_6_non_const_bondNum]), __cuda_local_var_43537_6_non_const_bondNum, __cuda_local_var_43558_24_non_const_cashFlows, __cuda_local_var_43540_7_non_const_numLegs));
# 1195 "bondsKernelsGpu.cu"
((results.cleanPrice)[__cuda_local_var_43537_6_non_const_bondNum]) = (((results.dirtyPrice)[__cuda_local_var_43537_6_non_const_bondNum]) - ((results.accruedAmountCurrDate)[__cuda_local_var_43537_6_non_const_bondNum]));
# 1196 "bondsKernelsGpu.cu"
}
# 1197 "bondsKernelsGpu.cu"
} 
# 1197 "bondsKernelsGpu.cu"
}}
